{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Android/lostarkHands/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"sangmin802/sangmin802.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"bbe540a1-b430-58f5-a139-be7fc205a0e1","excerpt":"배웠으면 써먹어봐야지 - LostArk Hands LostArk Hands 내가 좋아하는 게임인 로스트아크 유저검색앱을 만들어보고싶었는데 해당 게임사에서 API를 공개하지 않더라..\n\n그런데, 전투정보실 네트워크에서 요청하는 주소를 그대로 사용해보니, 완성된 View파일을 가져오는데 잘만 조리하면.. 필요한 데이터를 뽑을수 있을것 같아, JS…","html":"<h2 id=\"배웠으면-써먹어봐야지---lostark-hands\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%A0%EC%9C%BC%EB%A9%B4-%EC%8D%A8%EB%A8%B9%EC%96%B4%EB%B4%90%EC%95%BC%EC%A7%80---lostark-hands\" aria-label=\"배웠으면 써먹어봐야지   lostark hands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배웠으면 써먹어봐야지 - LostArk Hands</h2>\n<h3 id=\"lostark-hands\" style=\"position:relative;\"><a href=\"#lostark-hands\" aria-label=\"lostark hands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LostArk Hands</h3>\n<p>내가 좋아하는 게임인 로스트아크 유저검색앱을 만들어보고싶었는데 해당 게임사에서 API를 공개하지 않더라..\n<br>\n그런데, 전투정보실 네트워크에서 요청하는 주소를 그대로 사용해보니, 완성된 View파일을 가져오는데 잘만 조리하면.. 필요한 데이터를 뽑을수 있을것 같아, JS로 먼저 실험해봤는데, 잘 된다!\n<br>\n이미 로아와 라는 훌륭한 웹앱이 있고, 만드신 개발자께서 웹뷰로 모바일 앱도 구현해놓으신것 같다. 그래도 재미있을거 같으니 도전!</p>\n<h3 id=\"구현중-새롭게-알게된-점\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84%EC%A4%91-%EC%83%88%EB%A1%AD%EA%B2%8C-%EC%95%8C%EA%B2%8C%EB%90%9C-%EC%A0%90\" aria-label=\"구현중 새롭게 알게된 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현중 새롭게 알게된 점</h3>\n<h4 id=\"http통신은-coroutine을-활용하여-dispatchersio에서-진행\" style=\"position:relative;\"><a href=\"#http%ED%86%B5%EC%8B%A0%EC%9D%80-coroutine%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-dispatchersio%EC%97%90%EC%84%9C-%EC%A7%84%ED%96%89\" aria-label=\"http통신은 coroutine을 활용하여 dispatchersio에서 진행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP통신은 Coroutine을 활용하여 Dispatchers.IO에서 진행</h4>\n<ul>\n<li>메인스레드에서 HTTP통신시, 불가능하다는 에러가 생긴다. UI관련 작업을 수행하는 메인스레드이니 다른 스레드에서 진행하도록 한다. 코루틴을 공부하면서 HTTP통신을 하고, 결과값을 기다렸다가 사용하는 동기식 꿈의 코드를 알았으니 해결! </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  fun <span class=\"token function\">searchClickEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">CoroutineScope</span><span class=\"token punctuation\">(</span>Dispatchers<span class=\"token punctuation\">.</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>launch <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span>et_value<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  suspend fun <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">editTextVal<span class=\"token operator\">:</span> String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      val scopeManager <span class=\"token operator\">=</span> <span class=\"token function\">ScopeManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      val userData <span class=\"token operator\">=</span> scopeManager<span class=\"token punctuation\">.</span><span class=\"token function\">HttpRequest</span><span class=\"token punctuation\">(</span>editTextVal<span class=\"token punctuation\">)</span>\n\n      parentFragmentManager<span class=\"token punctuation\">.</span><span class=\"token function\">beginTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token constant\">R</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>frame_changingFrame<span class=\"token punctuation\">,</span> UserInfoFragment<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"코루틴스코프를-관리하는-하나의-클래스를-통해-일괄종료시킬-수-있다\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%A3%A8%ED%8B%B4%EC%8A%A4%EC%BD%94%ED%94%84%EB%A5%BC-%EA%B4%80%EB%A6%AC%ED%95%98%EB%8A%94-%ED%95%98%EB%82%98%EC%9D%98-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%ED%86%B5%ED%95%B4-%EC%9D%BC%EA%B4%84%EC%A2%85%EB%A3%8C%EC%8B%9C%ED%82%AC-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"코루틴스코프를 관리하는 하나의 클래스를 통해 일괄종료시킬 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코루틴스코프를 관리하는 하나의 클래스를 통해 일괄종료시킬 수 있다.</h4>\n<ul>\n<li>코루틴작업을 여러번 종료시킬필요 없이, 하나로 묶고 한번에 종료시킬수 있었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ScopeManager</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> val mainScope <span class=\"token operator\">=</span> <span class=\"token function\">CoroutineScope</span><span class=\"token punctuation\">(</span>Dispatchers<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">)</span>\n    fun <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        mainScope<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    suspend fun <span class=\"token function\">HttpRequest</span><span class=\"token punctuation\">(</span>_val <span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> SendingData <span class=\"token punctuation\">{</span>\n        val editTextVal <span class=\"token operator\">=</span> URLEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${_val}\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span>\n        val httpResult <span class=\"token operator\">=</span> <span class=\"token function\">getHttp</span><span class=\"token punctuation\">(</span>editTextVal<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> mainScope<span class=\"token punctuation\">.</span>async <span class=\"token punctuation\">{</span>\n            val userEquipResult <span class=\"token operator\">=</span> <span class=\"token function\">getUserEquip</span><span class=\"token punctuation\">(</span>httpResult<span class=\"token punctuation\">)</span>\n            val userInfoResult <span class=\"token operator\">=</span> <span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span>httpResult<span class=\"token punctuation\">,</span> _val<span class=\"token punctuation\">)</span>\n\n            <span class=\"token function\">SendingData</span><span class=\"token punctuation\">(</span>userEquipResult<span class=\"token punctuation\">,</span> userInfoResult<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"배열로된-데이터를-전달하고자-할-때\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%A1%9C%EB%90%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%A0%84%EB%8B%AC%ED%95%98%EA%B3%A0%EC%9E%90-%ED%95%A0-%EB%95%8C\" aria-label=\"배열로된 데이터를 전달하고자 할 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열로된 데이터를 전달하고자 할 때</h4>\n<ul>\n<li>여러개의 데이터를 하나의 배열형식으로 담아 넘겨줄 때, 타입이 애매해서 힘들었는데 Parcelable을 통해 쉽게할 수 있었다. 받는방식은 아래에서 확인</li>\n<li>코틀린에서는 데이터들의 모델을 만들어서 관리하는것이 이후 타입을 지정해주는것을 포함하여 깔끔한 것 같다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SendingData</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">var</span> userEquip <span class=\"token operator\">:</span> UserEquip<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">var</span> userInfo <span class=\"token operator\">:</span> UserInfo\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Parcelable <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"fragment-데이터-전달\" style=\"position:relative;\"><a href=\"#fragment-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EB%8B%AC\" aria-label=\"fragment 데이터 전달 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fragment 데이터 전달</h4>\n<ul>\n<li>MainFragment안에 WelcomeFragment가있고, 검색 시 검색된 유저의 정보를 띄우는 UserInfoFragment로 대체되도록 하였다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// MainFragment</span>\nsuspend fun <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">editTextVal<span class=\"token operator\">:</span> String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    val scopeManager <span class=\"token operator\">=</span> <span class=\"token function\">ScopeManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    val userData <span class=\"token operator\">=</span> scopeManager<span class=\"token punctuation\">.</span><span class=\"token function\">HttpRequest</span><span class=\"token punctuation\">(</span>editTextVal<span class=\"token punctuation\">)</span>\n\n    parentFragmentManager<span class=\"token punctuation\">.</span><span class=\"token function\">beginTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token constant\">R</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>frame_changingFrame<span class=\"token punctuation\">,</span> UserInfoFragment<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// UserInfoFragment</span>\n<span class=\"token keyword\">var</span> userData <span class=\"token operator\">:</span> SendingData<span class=\"token operator\">?</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n\n<span class=\"token comment\">// 2번진행</span>\noverride fun <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span>\n    arguments<span class=\"token operator\">?.</span>let <span class=\"token punctuation\">{</span>\n        userData <span class=\"token operator\">=</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">getParcelable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userData\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token comment\">// 1번진행</span>\ncompanion object <span class=\"token punctuation\">{</span>\n    @JvmStatic\n    fun <span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span>userData <span class=\"token operator\">:</span> SendingData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>\n        <span class=\"token function\">UserInfoFragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>apply <span class=\"token punctuation\">{</span>\n            arguments <span class=\"token operator\">=</span> <span class=\"token function\">Bundle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>apply <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">// 위에서 Parcelable 클래스에 상속받은 SendingData모델</span>\n                <span class=\"token function\">putParcelable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userData\"</span><span class=\"token punctuation\">,</span> userData<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"androidwindowsoftinputmodeadjustpan\" style=\"position:relative;\"><a href=\"#androidwindowsoftinputmodeadjustpan\" aria-label=\"androidwindowsoftinputmodeadjustpan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>android:windowSoftInputMode=“adjustPan”</h4>\n<ul>\n<li>키보드활성화시 이미지등이 밀려 사이즈가 작아지는것을 막을 수 있었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Manifest</span>\n<span class=\"token operator\">&lt;</span>activity\n    android<span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\".MainActivity\"</span>\n    android<span class=\"token operator\">:</span>windowSoftInputMode<span class=\"token operator\">=</span><span class=\"token string\">\"adjustPan\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>intent<span class=\"token operator\">-</span>filter<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>action android<span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"android.intent.action.MAIN\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n        <span class=\"token operator\">&lt;</span>category android<span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"android.intent.category.LAUNCHER\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>intent<span class=\"token operator\">-</span>filter<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>activity<span class=\"token operator\">></span></code></pre></div>\n<h4 id=\"화면이-짤리는-recyclerview\" style=\"position:relative;\"><a href=\"#%ED%99%94%EB%A9%B4%EC%9D%B4-%EC%A7%A4%EB%A6%AC%EB%8A%94-recyclerview\" aria-label=\"화면이 짤리는 recyclerview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화면이 짤리는 RecyclerView</h4>\n<ul>\n<li>보통 ScrollView 안에 RecyclerView 가 들어가는 경우라면 NestedScrollView를 써주자 ~</li>\n</ul>\n<h4 id=\"resources\" style=\"position:relative;\"><a href=\"#resources\" aria-label=\"resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>resources</h4>\n<ul>\n<li>resources를 통해 res폴더의 이미지, 색상 등 정적 자료들을 사용할 수 있다.</li>\n</ul>\n<h3 id=\"완성\" style=\"position:relative;\"><a href=\"#%EC%99%84%EC%84%B1\" aria-label=\"완성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완성!</h3>\n<div style=\"display : flex; justify-content : space-between;\">\n  <img style=\"display : inlneblock; width : 33%\" src=\"https://github.com/sangmin802/portfolio/blob/master/public/img/projectImg/loahands1.png?raw=true\" alt=\"result1\">\n  <img style=\"display : inlneblock; width : 33%\" src=\"https://github.com/sangmin802/portfolio/blob/master/public/img/projectImg/loahands2.png?raw=true\" alt=\"result2\">\n  <img style=\"display : inlneblock; width : 33%\" src=\"https://github.com/sangmin802/portfolio/blob/master/public/img/projectImg/loahands3.png?raw=true\" alt=\"result3\">\n</div>\n<h3 id=\"후기\" style=\"position:relative;\"><a href=\"#%ED%9B%84%EA%B8%B0\" aria-label=\"후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>후기</h3>\n<p>예전에는 안드로이드 개발은 JAVA언어라서 완전히 백엔드의 영역이라고 생각했다. 하지만 알아갈수록.. 프론트에 더 가까운느낌이랄까.. 정말 많이 부족하고 낯설며 어려웠지만 재미는 있네</p>","frontmatter":{"title":"Kotlin LostArk Hands","date":"October 08, 2020"}}},"pageContext":{"slug":"/Study/Android/lostarkHands/","previous":{"fields":{"slug":"/Study/Android/kotlinCoroutine_04_suspending/"},"frontmatter":{"title":"Kotlin Coroutine Suspending","category":"Study","draft":false,"tag":"Android"}},"next":{"fields":{"slug":"/Study/CS/Dom&VirtualDom/"},"frontmatter":{"title":"DOM 과 Virtual Dom","category":"Study","draft":false,"tag":"CS"}}}},"staticQueryHashes":["3128451518","3665928227","479399088","479399088"]}