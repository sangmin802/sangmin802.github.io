{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Android/2020-09-29-kotlinCoroutine_03_cancellation&timeouts/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin.com","author":"SangMin","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"9a31ea50-98d0-5823-812f-1ffe18ed374f","excerpt":"Coroutine Cancellation & Timeouts 예제 코루틴을 활용하여 비동기 처리를 할 때, 불필요하게 메모리가 소모되는 것을 막기 위해 진행 취소 또한 매우 중요하다. 예제1 생성되는 코루틴을 변수에 담고, cancel메소드를 통해 해당 코루틴을 중단시킬 수 있다. 예제2 위의 예제1과 비슷하게 코루틴을 작동을 중단시켰지만, 1.3초 이후에도 4, 5라는  모든 결과값을 진행하고 종료됨. 위의 에제에서는 코루틴 내부에 delay라는 suspend함수가 존재하지만 예제…","html":"<h2 id=\"coroutine-cancellation--timeouts-예제\" style=\"position:relative;\"><a href=\"#coroutine-cancellation--timeouts-%EC%98%88%EC%A0%9C\" aria-label=\"coroutine cancellation  timeouts 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coroutine Cancellation &#x26; Timeouts 예제</h2>\n<ul>\n<li>\n<p>코루틴을 활용하여 비동기 처리를 할 때, 불필요하게 메모리가 소모되는 것을 막기 위해 진행 취소 또한 매우 중요하다.</p>\n<h3 id=\"예제1\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C1\" aria-label=\"예제1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제1</h3>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fun <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> runBlocking <span class=\"token punctuation\">{</span>\n   val job <span class=\"token operator\">=</span> launch <span class=\"token punctuation\">{</span>\n       <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">1000</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> i <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n           <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : I'm sleeping $i ...\"</span><span class=\"token punctuation\">)</span>\n           <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1300</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : I'm tired of waiting!\"</span><span class=\"token punctuation\">)</span>\n   job<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : Now I can quit.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// job : I'm sleeping 0 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 1 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 2 ...</span>\n<span class=\"token comment\">// main : I'm tired of waiting!</span>\n<span class=\"token comment\">// main : Now I can quit.</span></code></pre></div>\n<ul>\n<li>생성되는 코루틴을 변수에 담고, cancel메소드를 통해 해당 코루틴을 중단시킬 수 있다.</li>\n</ul>\n<h3 id=\"예제2\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C2\" aria-label=\"예제2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제2</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fun <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> runBlocking <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//      위의 에제에서는 코루틴 내부에 delay라는 suspend함수가 존재하지만 예제2는 없음</span>\n   val startTime <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   val job <span class=\"token operator\">=</span> <span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Dispatchers<span class=\"token punctuation\">.</span>Default</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">var</span> nextPrintTime <span class=\"token operator\">=</span> startTime\n       <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n       <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 현재 밀리초가 초기값보다 크다면 진행하고, 초기값에 0.5초 더해줌</span>\n            <span class=\"token comment\">// 현재 밀리초가 초기값보다 더 작다가 시간이 흐르면 초기값보다 커져서 다시 진행</span>\n            <span class=\"token comment\">// 즉, 0.5초마다 반복이 됨</span>\n           <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> nextPrintTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n               <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : I'm sleeping ${i++} ...\"</span><span class=\"token punctuation\">)</span>\n               nextPrintTime <span class=\"token operator\">+=</span> <span class=\"token number\">500</span>\n           <span class=\"token punctuation\">}</span>\n       <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1300</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : I'm tired of waiting!\"</span><span class=\"token punctuation\">)</span>\n   job<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAndJoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : Now I can quit.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// job : I'm sleeping 0 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 1 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 2 ...</span>\n<span class=\"token comment\">// main : I'm tired of waiting!</span>\n<span class=\"token comment\">// job : I'm sleeping 3 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 4 ...</span>\n<span class=\"token comment\">// main : Now I can quit.</span></code></pre></div>\n<ul>\n<li>위의 예제1과 비슷하게 코루틴을 작동을 중단시켰지만, 1.3초 이후에도 4, 5라는  모든 결과값을 진행하고 종료됨.</li>\n<li>위의 에제에서는 코루틴 내부에 delay라는 suspend함수가 존재하지만 예제2는 없음</li>\n<li>해당 thread에서 코루틴을 중단시키더라도, 코루틴 내부에서 협조적이지 않으면(suspend함수가 없다면) 모든 결과를 보여주고 종료된다</li>\n</ul>\n<h3 id=\"예제2-1\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C2-1\" aria-label=\"예제2 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제2-1</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fun <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> runBlocking <span class=\"token punctuation\">{</span>\n    val startTime <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    val job <span class=\"token operator\">=</span> <span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Dispatchers<span class=\"token punctuation\">.</span>Default</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> nextPrintTime <span class=\"token operator\">=</span> startTime\n            <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> nextPrintTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : I'm sleeping ${i++} ...\"</span><span class=\"token punctuation\">)</span>\n                    nextPrintTime <span class=\"token operator\">+=</span> <span class=\"token number\">500</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">:</span> Exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Suspended by $e\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1300</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : I'm tired of waiting!\"</span><span class=\"token punctuation\">)</span>\n    job<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAndJoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : Now I can quit.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// job : I'm sleeping 0 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 1 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 2 ...</span>\n<span class=\"token comment\">// main : I'm tired of waiting!</span>\n<span class=\"token comment\">// Suspended by kotlinx.coroutines.JobCancellationException: StandaloneCoroutine was cancelled; job=StandaloneCoroutine{Cancelling}@4f591ba8</span>\n<span class=\"token comment\">// main : Now I can quit.</span></code></pre></div>\n<ul>\n<li>코루틴 내부에서도 delay로 시간을 부여하여 중단이 아닌 yield()를 통해 메인스레드에서 중단을 요청했을 때, 즉시 중단 가능하다.</li>\n<li>단, yield()를 통해 중단했을 때 중단 사유를 알 수 없기 때문에 try catch 구문을 통해 catch의 e 인자로 확인할 수 있다.</li>\n<li>해당 thread에서 코루틴을 중단시키더라도, 코루틴 내부에서 협조적이지 않으면(suspend함수가 없다면) 모든 결과를 보여주고 종료된다</li>\n</ul>\n<h3 id=\"예제2-2\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C2-2\" aria-label=\"예제2 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제2-2</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fun <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> runBlocking <span class=\"token punctuation\">{</span>\n    val startTime <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    val job <span class=\"token operator\">=</span> <span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Dispatchers<span class=\"token punctuation\">.</span>Default</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> nextPrintTime <span class=\"token operator\">=</span> startTime\n        <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>isActive<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> nextPrintTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : I'm sleeping ${i++} ...\"</span><span class=\"token punctuation\">)</span>\n                nextPrintTime <span class=\"token operator\">+=</span> <span class=\"token number\">500</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1300</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : I'm tired of waiting!\"</span><span class=\"token punctuation\">)</span>\n    job<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAndJoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : Now I can quit.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// job : I'm sleeping 0 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 1 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 2 ...</span>\n<span class=\"token comment\">// main : I'm tired of waiting!</span>\n<span class=\"token comment\">// main : Now I can quit.</span></code></pre></div>\n<ul>\n<li>조건에 isActive를 통해 suspend함수 없이도 중단시킬 수 있다.</li>\n</ul>\n<h3 id=\"예제3\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C3\" aria-label=\"예제3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제3</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fun <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> runBlocking <span class=\"token punctuation\">{</span>\n    val job <span class=\"token operator\">=</span> launch <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">1000</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> i <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n                <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : I'm sleeping $i ...\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : I'm running finally\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1300</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : I'm tired of waiting!\"</span><span class=\"token punctuation\">)</span>\n    job<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAndJoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : Now I can quit.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// job : I'm sleeping 0 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 1 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 2 ...</span>\n<span class=\"token comment\">// main : I'm tired of waiting!</span>\n<span class=\"token comment\">// job : I'm running finally</span>\n<span class=\"token comment\">// main : Now I can quit.</span></code></pre></div>\n<ul>\n<li>네트워크 오류 등 코루틴 진행이 중단되었을 때, finally 내부에서 중단 이후 처리를 할 수 있다.</li>\n</ul>\n<h3 id=\"예제4\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C4\" aria-label=\"예제4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제4</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fun <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> runBlocking <span class=\"token punctuation\">{</span>\n    val job <span class=\"token operator\">=</span> launch <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">1000</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> i <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n                <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : I'm sleeping $i ...\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">withContext</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">NonCancellable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : I'm running finally\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job : And I've just delayed for 1 sec because I'm non-cancellable\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1300</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : I'm tired of waiting!\"</span><span class=\"token punctuation\">)</span>\n    job<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAndJoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main : Now I can quit.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// job : I'm sleeping 0 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 1 ...</span>\n<span class=\"token comment\">// job : I'm sleeping 2 ...</span>\n<span class=\"token comment\">// main : I'm tired of waiting!</span>\n<span class=\"token comment\">// job : I'm running finally</span>\n<span class=\"token comment\">// job : And I've just delayed for 1 sec because I'm non-cancellable</span>\n<span class=\"token comment\">// main : Now I can quit.</span></code></pre></div>\n<ul>\n<li>코루틴이 중단된 시점에 다른 코루틴을 한번 더 작동시키고자 할 경우</li>\n</ul>\n<h3 id=\"예제5\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C5\" aria-label=\"예제5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제5</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fun <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> runBlocking <span class=\"token punctuation\">{</span>\n    val result <span class=\"token operator\">=</span> <span class=\"token function\">withTimeoutOrNull</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">1300</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">1000</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> i <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n            <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm sleeping $i ...\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token string\">\"Done\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Result is $result\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// I'm sleeping 0 ...</span>\n<span class=\"token comment\">// I'm sleeping 1 ...</span>\n<span class=\"token comment\">// I'm sleeping 2 ...</span>\n<span class=\"token comment\">// Result is null</span></code></pre></div>\n<ul>\n<li>지정시간 종료 시, 지정한 값을 반환</li>\n</ul>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<ul>\n<li>runBlocking = 자식 코루틴(스레드)들이 모두 완료될때까지 현재 스레드가 종료되는것을 미룸</li>\n<li>launch = 위에서 순차적으로 읽어오면서 해당 launch 코루틴이 있다면 외부 신경쓰지말고 그냥 실행시킴 특별한 명령 없으면 멈추지않음</li>\n<li>suspend = 코루틴(스레드)내부에서 suspend함수를 만나는 순간 해당 메인 스레드를 읽는것을 중지하고 그 suspend함수먼저 실행시킨다음 suspend함수 완료되면 다음꺼 읽음</li>\n</ul>\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<p><a href=\"https://www.youtube.com/watch?v=GmVv98LUa0k&#x26;list=PLbJr8hAHHCP5N6Lsot8SAnC28SoxwAU5A&#x26;index=3\">새차원 코틀린 코루틴</a></p>","frontmatter":{"title":"Kotlin Coroutine Cancellation & Timeouts","date":"September 29, 2020"}}},"pageContext":{"slug":"/Study/Android/2020-09-29-kotlinCoroutine_03_cancellation&timeouts/","previous":{"fields":{"slug":"/Study/Android/2020-09-28-kotlinCoroutine_02_basic/"},"frontmatter":{"title":"Kotlin Coroutine Basic","category":"Study","draft":false}},"next":{"fields":{"slug":"/Study/Android/2020-09-29-kotlinCoroutine_04_suspending/"},"frontmatter":{"title":"Kotlin Coroutine Suspending","category":"Study","draft":false}}}},"staticQueryHashes":["3128451518","3665928227"]}