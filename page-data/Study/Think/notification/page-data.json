{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Think/notification/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"utterances":"sangmin802/sangmin802.github.io"}}},"markdownRemark":{"id":"6f174330-73b4-5faf-be96-14cb2a109f09","excerpt":"…","html":"<p>진행했던 개인 프로젝트인 <code class=\"language-text\">Loa-Hands</code>, <code class=\"language-text\">Web Chat</code>모두 웹 앱에서 어떠한 반응이 생기고 변경되는 정보를 사용자가 습득하는것이 주 이다.</p>\n<p>대부분의 앱들도 마찬가지겠지만, 웹 앱을 활성화 시켜놓고 계속 그 화면만 보는 사용자들은 없다.</p>\n<p>다른 활동을 한다거나, 잠시 자리를 비운다거나.</p>\n<p>그래서 <code class=\"language-text\">Loa-Hands</code>에서 타이머로 계산되고있는 컨텐츠들이 특정 시간에 도달했다거나 <code class=\"language-text\">Web Chat</code>에 새로운 메시지가 전달된다면 다른화면을 보고있는 사용자에게 알림을 전달할 수 없을까? 라는 고민을 하였다.</p>\n<p>사실 다이얼로그같은 컴포넌트가 생성된다고 하더라도, 활성화되어있는 브라우저가 다르다면 확인할 수 없기 때문에 앱 내부에서의 기능으로는 한계가 있었다.</p>\n<p>즉, 브라우저에서 제공하는 <code class=\"language-text\">Web API</code>에서 알아볼 필요가 있었다.</p>\n<h2 id=\"notification\" style=\"position:relative;\"><a href=\"#notification\" aria-label=\"notification permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Notification</h2>\n<p>당연히 <code class=\"language-text\">Web API</code>이다. 대부분의 브라우저들에서 제공되는 기능이고, <code class=\"language-text\">chrome</code>에서는 스타일링 된 기능도 모듈처럼 제공하는것 같았다.</p>\n<p><code class=\"language-text\">Notification</code> 생성자를 통해 인터페이스를 생성할 수 있다.</p>\n<h3 id=\"권한\" style=\"position:relative;\"><a href=\"#%EA%B6%8C%ED%95%9C\" aria-label=\"권한 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>권한</h3>\n<p>사용자의 브라우저를 조작하는 <code class=\"language-text\">API</code>이기 때문에, 사용자의 권한이 먼저 필요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">requestPermission</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> permission <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Notification<span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Notification</span><span class=\"token punctuation\">(</span><span class=\"token string\">'알림이 허용되었습니다.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Notification.requestPermission</code>메소드를 통해 사용자에게 권한을 요청하는 알림이 간다.</p>\n<blockquote>\n<p><code class=\"language-text\">prompt</code>와 유사함</p>\n</blockquote>\n<ol>\n<li><code class=\"language-text\">granted</code> 권한 승인</li>\n<li><code class=\"language-text\">dennied</code> 권한 미승인</li>\n<li><code class=\"language-text\">default</code> 권한을 요청할 수 있는 상태</li>\n</ol>\n<p>2번의 <code class=\"language-text\">dennied</code>상태는 권한을 요청할 수 조차 없다.\n따라서, 만약 사용자의 브라우저에서 모든 웹 앱에서의 요청을 <code class=\"language-text\">dennied</code>한 상태라면, 사용자가 권한을 <code class=\"language-text\">default</code>상태로 변경하여야만 요청이 전달되는것 같았다.</p>\n<blockquote>\n<p>기본적으로 <code class=\"language-text\">https</code>, 인증서로 인증된 사이트 에서는 자물쇠를 클릭하여 상태를 선택할 수 있다.</p>\n</blockquote>\n<p>비동기로 작동이 되기 때문에, 사용자의 선택을 담고있는 <code class=\"language-text\">promise</code>객체를 반환한다.</p>\n<p><code class=\"language-text\">.then</code>으로 응답 데이터를 받아서 처리하도록 공문에는 나와있지만,\n비교적 최신 방식인<code class=\"language-text\">async await</code>으로 해도 작동은 되더라.</p>\n<h3 id=\"권한-상태-확인\" style=\"position:relative;\"><a href=\"#%EA%B6%8C%ED%95%9C-%EC%83%81%ED%83%9C-%ED%99%95%EC%9D%B8\" aria-label=\"권한 상태 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>권한 상태 확인</h3>\n<p>현재 사용자에게 알림을 전달할 수 있는 권한이 어떤 상태인지 확인해볼 필요가 있을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">checkPermission</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> permission <span class=\"token operator\">=</span> Notification<span class=\"token punctuation\">.</span>permission\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'denied'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Notification.permission</code>으로 권한을 확인해 볼 수 있으며, 해당 속성은 오로지 읽기전용이기 때문에, 값 할당과같은 방식으로는 값을 변경할 수 없다.</p>\n<blockquote>\n<p>사용자의 권한 영역이기 때문에, 당연하다고 본다.</p>\n</blockquote>\n<h3 id=\"알림-전달\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EB%A6%BC-%EC%A0%84%EB%8B%AC\" aria-label=\"알림 전달 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알림 전달</h3>\n<p>만약 권한이 승인되었다면, 아래와 같은 방법으로 알림을 전달할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Notification</span><span class=\"token punctuation\">(</span><span class=\"token string\">'제목'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">'내용'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>첫번째로는 타이틀, 두번째로는 옵션객체를 전달할 수 있는데, 옵션 객체에는 <code class=\"language-text\">세부 내용</code>, <code class=\"language-text\">이미지</code>등을 추가할 수 있었다.</p>\n<h3 id=\"loa-hands-사용\" style=\"position:relative;\"><a href=\"#loa-hands-%EC%82%AC%EC%9A%A9\" aria-label=\"loa hands 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loa-Hands 사용</h3>\n<p>현재, <code class=\"language-text\">Loa-Hands</code>에서는 아래와 같은 하나의 이벤트 생성자로 관리해서 사용해보았다.</p>\n<p>앱 특성상, 동일한 시간에 여러 알림이 전달될 수 있기 때문에, 그러한 상황이라면 각각의 알림들을 <code class=\"language-text\">que</code>배열에 저장해 두었다가, 특정 시간 이내에 새로운 요청이 없다면 일괄 처리해주는 방식을 사용하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">NotificationHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">createNotification</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> notificationWorks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">let</span> timeout <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">requestPermission</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> permission <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Notification<span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Notification</span><span class=\"token punctuation\">(</span><span class=\"token string\">'알림이 허용되었습니다.'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">checkPermission</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> permission <span class=\"token operator\">=</span> Notification<span class=\"token punctuation\">.</span>permission\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'denied'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeTimeout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">activeNotification</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 권한 승인상태가 아니면 종료</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    notificationWorks<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n    timeout <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> option <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">createNotification</span><span class=\"token punctuation\">(</span>notificationWorks<span class=\"token punctuation\">)</span>\n      notificationWorks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>또한 전달하게 될 알림에 대한 <code class=\"language-text\">data</code>들을 계산하는 방식은 모두 다를 수 있기 때문에, 함수를 생성하기 전 전달해주도록 하였다.</p>\n<blockquote>\n<p><code class=\"language-text\">React</code>의 특성상 메모이제이션 되어있기 때문에, 절대로 <code class=\"language-text\">notification</code>은 재생성되지 않는다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> notification <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NotificationHandler</span><span class=\"token punctuation\">(</span>계산 함수<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>createNotification<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"테스트\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트</h3>\n<p>잘 작동되는지 확인해보자</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/09/14/1.PNG?raw=true\" alt=\"1\">\n</div>\n<p>사용자에게 먼저 권한을 요청하는 알림이 간다.</p>\n<blockquote>\n<p>단, 사용자의 권한 상태가 <code class=\"language-text\">dennied</code>라면 요청이 전달되지 않는다.</p>\n</blockquote>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/09/14/2.PNG?raw=true\" alt=\"2\">\n</div>\n<p>요청을 승인하고, 요청을 승인했다는 첫 알림이 전달된 모습이다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/09/14/3.PNG?raw=true\" alt=\"3\">\n</div>\n<p>타이머가 적용된 컨텐츠의 특정 시간에 도달하자, 여러 요청들을 하나로 병합하여 알림을 전달한 모습이다.</p>\n<h3 id=\"고민\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EB%AF%BC\" aria-label=\"고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고민</h3>\n<p>위의 상황에서는 여러 요청을 하나로 병합해주기 위해 <code class=\"language-text\">0.3</code>초라는 시간 뒤에 알림이 전달되도록 하였다.</p>\n<p>만약, <code class=\"language-text\">Web Chat</code>처럼 실시간이 중요하고, 모든 요청들이 각각전달되어야 한다면?</p>\n<blockquote>\n<p>카카오톡처럼</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">알림<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>알림<span class=\"token punctuation\">)</span></code></pre></div>\n<p>기본적으로 전달된 알림은 브라우저에서 기본적으로 설정한 시간 이후에 자동으로 사라진다.</p>\n<p>만약, 요청이 중첩되어있다면 사라진 다음에 다음 요청이 알림으로 생성된다.</p>\n<p>위의 <code class=\"language-text\">close</code>메소드를 사용하여 생성된 알림을 즉시 사라지도록 할 수 있는데, 이 방법을 사용하여 이전 알림을 하나의 변수에 캐싱해두고, 새로운 요청이 들어올 때 이전 알림을 <code class=\"language-text\">close</code>해주는 방식으로 처리해주면 될 것 같다.</p>\n<p>비교적 최근에는 브라우저가 활성화 되어있지 않더라도, 알림을 전달해 줄 수 있는 <code class=\"language-text\">Web Push API</code>가 생겼다고 한다.</p>\n<blockquote>\n<p>마치 모바일의 알림처럼</p>\n</blockquote>\n<p>하지만, 해당 <code class=\"language-text\">API</code>는 <code class=\"language-text\">IOS</code>의 기본 브라우저인 <code class=\"language-text\">Safari</code>에서는 제공하지 않겠다고 선을 그은 <code class=\"language-text\">API</code>라고 한다.</p>\n<p>브라우저에서 <code class=\"language-text\">native</code>에서만 구현할 수 있는 방법들이 계속 생겨나게 되면 <code class=\"language-text\">native</code>개발자들의 입지가 줄어들지 않을까..? 라는 점</p>\n<p>아.. 충분히 이해가 가는 문제이다.</p>","frontmatter":{"title":"🔔 Notifiaction으로 사용자에게 알림 전달","date":"September 14, 2021"}}},"pageContext":{"slug":"/Study/Think/notification/","previous":{"fields":{"slug":"/Study/Think/useState,redux,useReducer/"},"frontmatter":{"title":"⚛ useState, Redux 그리고 useReducer","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/Think/callstack await/"},"frontmatter":{"title":"⚛ CallStack에서 await을 만났을 때","category":"Study","draft":false,"tag":"Think"}}}},"staticQueryHashes":["1162990174","1854831582","2054357557","3128451518"],"slicesMap":{}}