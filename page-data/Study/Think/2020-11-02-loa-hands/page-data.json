{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Think/2020-11-02-loa-hands/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin.com","author":"SangMin","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"f661398e-0f72-52b4-801d-4803b62e9a57","excerpt":"Loa-Hands React-Hook, redux-hook등 기존과 다른 방법으로 웹앱을 만드는 과정에서 여러가지 시행착오를 가졌었고, 그것들을 기록해보려 한다. Loa-Hands 이동 redux-hook / shallwoEqual 기존 Redux를 사용할 때에는, 해당 컴포넌트에 connect 메소드를 활용하여 연결을 하였었다. 한때는 이것이 직관적이고 좋아서 편하다 생각했는데, 확실히 redux-Hook…","html":"<h2 id=\"loa-hands\" style=\"position:relative;\"><a href=\"#loa-hands\" aria-label=\"loa hands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loa-Hands</h2>\n<p>React-Hook, redux-hook등 기존과 다른 방법으로 웹앱을 만드는 과정에서 여러가지 시행착오를 가졌었고, 그것들을 기록해보려 한다.</p>\n<ul>\n<li><a href=\"https://sangmin802.github.io/loa-hands/\">Loa-Hands 이동</a></li>\n</ul>\n<h3 id=\"redux-hook--shallwoequal\" style=\"position:relative;\"><a href=\"#redux-hook--shallwoequal\" aria-label=\"redux hook  shallwoequal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>redux-hook / shallwoEqual</h3>\n<p>기존 Redux를 사용할 때에는, 해당 컴포넌트에 connect 메소드를 활용하여 연결을 하였었다. 한때는 이것이 직관적이고 좋아서 편하다 생각했는데, 확실히 redux-Hook을 원활하게 사용할 줄 만 안다면, 비교적 더 간단하게 구현 가능한것 같다.</p>\n<ul>\n<li>useDispatch : 각종 액션들을 통해 스토어에 변경을 요청할 수 있는 메소드</li>\n<li>useConnect : 스토어에서 필요한 값을 가져오는 메소드이다.</li>\n</ul>\n<p>그런데, 사용중 문제가 생겼었는데, 해당 컴포넌트에서는 isLoading속성을 받아오지 않음에도 불구하고, 아래의 디스패치로 isLoading가 변경되었을 때, 다시 렌더링을 했었다.\n<br>\n그것을 막기 위해 react-redux에서 shallowEqual라는 메소드를 받아오고 두번째 인자로 보내주어 내가 받아오기로 한 속성들만 변경이 있을 때 렌더링을 하도록 해줄 수 있다.</p>\n<br>\n물론, 두번째 콜백함수는 직접 등록도 가능하여, 두개의 인자를 받고 두개의 인자를 비교하여 렌더링할것인지(false) 하지 않을것인지(true) 지정할 수 있다.\n<br>\n또한, 자식컴포넌트의 경우 React Hook으로 인해 부모가 다시 렌더링 되었을 때, 이유없이 불필요한 렌더링이 될 수 있기 때문에 React.memo로 자식컴포넌트를 감싸 무조건 true를 혹은 조건부 true를 반환시켜 렌더링이 안되도록 막는게 좋은듯 했다.\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span>\n    dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>userData<span class=\"token punctuation\">,</span> expeditionPop<span class=\"token punctuation\">,</span> userInfoMainTab<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSelector</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      userData <span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>userData<span class=\"token punctuation\">,</span>\n      expeditionPop <span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>expeditionPop<span class=\"token punctuation\">,</span>\n      userInfoMainTab <span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>userInfoMainTab<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shallowEqual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// dispatch</span>\n <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>Actions<span class=\"token punctuation\">.</span><span class=\"token function\">expeditionPopToggle</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"can-not-update-a-component-while-rendering-a-different-component\" style=\"position:relative;\"><a href=\"#can-not-update-a-component-while-rendering-a-different-component\" aria-label=\"can not update a component while rendering a different component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Can not update a component while rendering a different component…</h3>\n<p>솔직히 아직도 이해가 되지 않는 에러였다.<br>\n화면상으로는 문제없이 구현되지만, 콘솔창에는 해당 에러가 출력이 된다.<br>\nApp컴포넌트 안에 UserInfo와 Home컴포넌트가 있으며 react-router로 연결되어있다. UserInfo 컴포넌트에서 헤더의 로고를 클릭하면 다시 Home컴포넌트가 출력되는 방식인데, 평소에는 문제없지만 새로고침을 하여 스토어에 HomeData가 없어진다면 HomeDate의 디스패쳐가 작동되어 다시 받아오도록 설정되어있다.<br>\n그런데 그 과정에서 해당 에러가 지속적으로 발생한다.<br>\n이유는 Home컴포넌트가 렌더링되는 과정에 디스패쳐에서 변경되늰 isLoading때문에 App컴포넌트도 렌더링되어 발생하는 문제라는데..</p>\n<ul>\n<li>로고를 클릭했을 때 바로이동이 아닌 router-hook을 통해, UserInfo컴포넌트에서 모든 정보를 받은 뒤, Home으로 이동하게하여 순차적으로 렌더링하게 했더니 에러는 안생긴다.</li>\n</ul>\n<p>아니근데 이해가 좀 안되는게, 처음 앱이 켜질때에도 같은 조건인데 그때는 아무 에러 없다가 이 경우에만 저 에러가생기는게 참;</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setHomeData_Thunk</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">history</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dispatch<span class=\"token punctuation\">,</span> getState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadingToggle</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHomeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">homeData</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">setHomeData</span><span class=\"token punctuation\">(</span>homeData<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">)</span> history<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"깃허브페이지와-browserrouter\" style=\"position:relative;\"><a href=\"#%EA%B9%83%ED%97%88%EB%B8%8C%ED%8E%98%EC%9D%B4%EC%A7%80%EC%99%80-browserrouter\" aria-label=\"깃허브페이지와 browserrouter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>깃허브페이지와 BrowserRouter</h3>\n<p>브라우저 라우터를 사용하여 깃허브페이지를 띄울 때, 쿼리문이 있다면 새로고침을 하였을 때 404오류가 발생한다. 아무래도 새롭게 주소를 찾는것때문에 그런듯 하다.\n브라우저 라우터를 사용하여 깃허브페이지를 띄울 때, 쿼리문이 있다면 새로고침을 하였을 때 404오류가 발생한다. 아무래도 새롭게 주소를 찾는것때문에 그런듯 하다.</p>\n<ul>\n<li>404페이지에서 원점으로 돌아가는 스크립트를 즉시실행시키고, index.html에서 다시 path를 통해 이동하는 방식이 있었다.</li>\n<li><a href=\"https://github.com/rafgraph/spa-github-pages\">404->index.html</a></li>\n</ul>","frontmatter":{"title":"React Loa-Hands","date":"November 02, 2020"}}},"pageContext":{"slug":"/Study/Think/2020-11-02-loa-hands/","previous":{"fields":{"slug":"/Diary/2020-10-26-dangn out/"},"frontmatter":{"title":"당근마켓 불합격","category":"Diary","draft":false}},"next":{"fields":{"slug":"/Study/Aws/2020-11-04-ec2&s3/"},"frontmatter":{"title":"EC2&S3","category":"Study","draft":false}}}},"staticQueryHashes":["3128451518","3665928227"]}