{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Think/Executed Context_v2/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"sangmin802/sangmin802.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"441861c2-3d91-5c4b-b6af-e480bdafa9a5","excerpt":"참조 : https://www.zerocho.com/category/Javascript/post/5740531574288ebc5f2ba97e 😖 실행 컨텍스트를 이전에 공부했지만.. 아직 확신이 가지 않는 부분이 많아서 더 구글링 해 보았고, 조금 더 쉽게 설명된 글이 있었다! 실행컨텍스트 : 문맥이라 생각하자. 코드의 실행환경. 설명을 위한 코드 시작! 전역변수객체 생성(window…","html":"<blockquote>\n<p>참조 : <a href=\"https://www.zerocho.com/category/Javascript/post/5740531574288ebc5f2ba97e\">https://www.zerocho.com/category/Javascript/post/5740531574288ebc5f2ba97e</a></p>\n</blockquote>\n<p>😖 실행 컨텍스트를 이전에 공부했지만.. 아직 확신이 가지 않는 부분이 많아서 더 구글링 해 보았고, 조금 더 쉽게 설명된 글이 있었다!</p>\n<h2 id=\"실행컨텍스트--문맥이라-생각하자-코드의-실행환경\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8--%EB%AC%B8%EB%A7%A5%EC%9D%B4%EB%9D%BC-%EC%83%9D%EA%B0%81%ED%95%98%EC%9E%90-%EC%BD%94%EB%93%9C%EC%9D%98-%EC%8B%A4%ED%96%89%ED%99%98%EA%B2%BD\" aria-label=\"실행컨텍스트  문맥이라 생각하자 코드의 실행환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행컨텍스트 : 문맥이라 생각하자. 코드의 실행환경.</h2>\n<h3 id=\"설명을-위한-코드\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%BD%94%EB%93%9C\" aria-label=\"설명을 위한 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명을 위한 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'zero'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">wow</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">word</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>word <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'nero'</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">wow</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"시작\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91\" aria-label=\"시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작!</h3>\n<ol>\n<li>전역변수객체 생성(window에 전역변수들 추가)</li>\n<li>전역컨텍스트 생성. 함수선언식의 경우, 속성으로 함수명, 값으로 함수가 추가되고, 변수의경우 속성으로 변수명, 값은 <code class=\"language-text\">undefined</code>로 할당됨.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token constant\">GEC</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// GO라고도 함</span>\n    name<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">wow</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'위의 함수내용'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">say</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'위의 함수내용'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  scopeChain<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'전역 변수객체'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> window<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>코드를 위에서부터 읽어내려오면서 각 변수들에게 값을 할당해줌.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">GEC</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// GO라고도 함</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">wow</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'위의 함수내용'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">say</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'위의 함수내용'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  scopeChain<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'전역 변수객체'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> window<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li><code class=\"language-text\">say()</code> 호출시, <code class=\"language-text\">say</code> 함수컨텍스트 생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> FEC_say <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// FO라고도 함</span>\n    arguments<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    variable<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  scopeChain<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'say 변수객체'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'전역 변수객체'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> window<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">wow(&#39;hello&#39;)</code>도 say함수 내부에 있는데, 왜 <code class=\"language-text\">say</code> 실행컨텍스트에없나 할 수 있는데, <code class=\"language-text\">say</code>함수 내부의 wow는 변수가아니라 호출된 함수임. 따라서, 함수의 호출위치가 아닌 선언 위치에 따라 스코프(영역)이 설정되기 때문에 wow의 정보는 함수선언식으로 표현되었을 때, 전역변수객체에 담겨있음.</li>\n<li><code class=\"language-text\">undefined</code>였던 변수<code class=\"language-text\">name</code> 값 할당.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">FEC_say <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// FO라고도 함</span>\n    arguments<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    variable<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'nero'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  scopeChain<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'say 변수객체'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'전역 변수객체'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> window<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"6\">\n<li>wow(‘hello’) 호출시, wow 실행컨텍스트 생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> FEC_wow <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// FO라고도 함</span>\n    arguments<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> word<span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 변수로 보내진것을 인자로 받음</span>\n    variable<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 해당 스코프 내에서, 갖고있는 변수 없음.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  scopeChain<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'wow 변수객체'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'전역 변수객체'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">say</code>변수객체는 <code class=\"language-text\">closure</code>로 존재하지않는다. 왜냐? 처음 함수가 선언될 때, 전역에 선언되었기 때문.(위에서 말했지만, 스코프(영역)은 호출이 아닌 선언됬을 때 형성됨)</li>\n</ul>\n<h3 id=\"결과--hello-zero\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC--hello-zero\" aria-label=\"결과  hello zero permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과 = hello zero;</h3>\n<p><code class=\"language-text\">hello</code>는 <code class=\"language-text\">arguments</code>에서 찾고, <code class=\"language-text\">name</code>의 값은, <code class=\"language-text\">variable</code>에 없기때문에, <code class=\"language-text\">scopeChain</code>을 따라올라가 전역변수객체에서 찾는다.</p>\n<h3 id=\"-결론\" style=\"position:relative;\"><a href=\"#-%EA%B2%B0%EB%A1%A0\" aria-label=\" 결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 결론</h3>\n<p>이번 실행컨텍스트를 공부하면서 <code class=\"language-text\">closure</code>, <code class=\"language-text\">scope라는</code> 용어를 자주보게되었다. 이것도 한번 다뤄봐야겠다.</p>","frontmatter":{"title":"실행컨텍스트(Executed Context) 더 쉽게!","date":"July 08, 2020"}}},"pageContext":{"slug":"/Study/Think/Executed Context_v2/","previous":{"fields":{"slug":"/Study/Think/Executed Context_v1_2/"},"frontmatter":{"title":"실행컨텍스트2(Executed Context)","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/Think/Executed Context_v1_1/"},"frontmatter":{"title":"실행컨텍스트1(Executed Context)","category":"Study","draft":false,"tag":"Think"}}}},"staticQueryHashes":["3128451518","3665928227","479399088","479399088"]}