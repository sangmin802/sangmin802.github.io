{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Think/scope/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"sangmin802/sangmin802.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"6731194e-4f24-5ef1-b2e6-8a2cf6232f3a","excerpt":"😂 이전 실행컨텍스트를 공부하면서, 라는 용어를 접하게 되었다. 그렇게 어려운 용어는 아니였지만, 지금생각해보니를 먼저 알고 실행컨텍스트를 공부했다면 더 수월했을 듯 하다. Scope(영역) 는 함수가 호출될 때가 아니라, 선언했을 때 정해진다고 했었음. 1번 1번에서 인 함수선언식은,  함수 안에있기 때문에, 의 내부까지가 영역임. 따라서,  라는 변수가 담긴클로저에 접근할 수있음. 2번…","html":"<p>😂 이전 실행컨텍스트를 공부하면서, <code class=\"language-text\">Scope</code>라는 용어를 접하게 되었다. 그렇게 어려운 용어는 아니였지만, 지금생각해보니<code class=\"language-text\">Scope</code>를 먼저 알고 실행컨텍스트를 공부했다면 더 수월했을 듯 하다.</p>\n<h2 id=\"scope영역\" style=\"position:relative;\"><a href=\"#scope%EC%98%81%EC%97%AD\" aria-label=\"scope영역 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope(영역)</h2>\n<p><code class=\"language-text\">Scope</code>는 함수가 호출될 때가 아니라, 선언했을 때 정해진다고 했었음.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 1번</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'zero'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">wrapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'nero'</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">wrapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// nero</span>\n\n<span class=\"token comment\">// 2번</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'zero'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">wrapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'nero'</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">wrapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// zero</span></code></pre></div>\n<h3 id=\"1번\" style=\"position:relative;\"><a href=\"#1%EB%B2%88\" aria-label=\"1번 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1번</h3>\n<p>1번에서 <code class=\"language-text\">function log</code>인 함수선언식은, <code class=\"language-text\">wrapper</code> 함수 안에있기 때문에, <code class=\"language-text\">wrapper</code>의 내부까지가 <code class=\"language-text\">Scope</code>영역임. 따라서, <code class=\"language-text\">var name=&quot;nero&quot;</code> 라는 변수가 담긴<b style=\"color : tomato;\">클로저</b>에 접근할 수있음.</p>\n<h3 id=\"2번\" style=\"position:relative;\"><a href=\"#2%EB%B2%88\" aria-label=\"2번 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2번</h3>\n<p>2번에서 <code class=\"language-text\">function log</code>인 함수선언식은, 전역에 위치하고있기 때문에, 참조할 수 있는 것이 전역변수인 <code class=\"language-text\">var name=&quot;zero&quot;</code>뿐이여서 값이 다르다.</p>\n<h2 id=\"전역변수의-위험성\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD%EB%B3%80%EC%88%98%EC%9D%98-%EC%9C%84%ED%97%98%EC%84%B1\" aria-label=\"전역변수의 위험성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역변수의 위험성</h2>\n<p>전역변수는 <code class=\"language-text\">window</code> 객체에 추가되기때문에, 앱의 규모가 커질수록 사용하면 안된다.<br>\nvar 는 <code class=\"language-text\">window</code>객체에 포함되지만, <code class=\"language-text\">let</code>, <code class=\"language-text\">const는</code> 별도의 객체에 추가됨. 따라서, <code class=\"language-text\">const</code> <code class=\"language-text\">let은</code> 괜찮은것 같더라.</p>\n<ul>\n<li>네임스페이스 : 변수를 보관하는 껍질 제작.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> param <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  text<span class=\"token operator\">:</span> <span class=\"token string\">'local'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">alertText</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>하지만, 위의 경우, 추가적으로 <code class=\"language-text\">script</code>를 추가하여, x와 y를 고의적으로 변경할 수 있다. <code class=\"language-text\">obj.text = &#39;fuck&#39;</code> 이런식으로</p>\n<h2 id=\"-해결방안\" style=\"position:relative;\"><a href=\"#-%ED%95%B4%EA%B2%B0%EB%B0%A9%EC%95%88\" aria-label=\" 해결방안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>😆 해결방안</h2>\n<p>비공개변수로 만들어서 해결할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> param <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 1. param이라는 변수에, 비공개변수를 Closure로 갖는 메소드를 포함한 객체를 반환한다.</span>\n  <span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token string\">'local'</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">alertText</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparam<span class=\"token punctuation\">.</span><span class=\"token function\">alertText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2. 필요할때 사용한다.</span></code></pre></div>\n<h2 id=\"🧐-의문\" style=\"position:relative;\"><a href=\"#%F0%9F%A7%90-%EC%9D%98%EB%AC%B8\" aria-label=\"🧐 의문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧐 의문</h2>\n<p>실행컨텍스트와 이번 스코프를 하면서 컨텍스트에서 생성되는 <code class=\"language-text\">[[Scopes]]</code>객체에서 <code class=\"language-text\">closure</code>라는 값을 보았고, 이번에도 스코프 영역 내의 변수를 <code class=\"language-text\">closure</code>라고 하는걸 보았다. 다음번에는 <code class=\"language-text\">closure</code>가 정확히 무엇인지 알아보아야 겠다.</p>","frontmatter":{"title":"Scope, 영역","date":"July 13, 2020"}}},"pageContext":{"slug":"/Study/Think/scope/","previous":{"fields":{"slug":"/Study/Think/Executed Context_v1_1/"},"frontmatter":{"title":"실행컨텍스트1(Executed Context)","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/Think/hoisting/"},"frontmatter":{"title":"Hoisting, 호이스팅","category":"Study","draft":false,"tag":"Think"}}}},"staticQueryHashes":["3128451518","3665928227","479399088","479399088"]}