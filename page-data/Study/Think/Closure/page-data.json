{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Think/Closure/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"sangmin802/sangmin802.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"48923f06-45ce-5b2e-9c4d-a59d7b896305","excerpt":"😂 해당 스코프(영역)에서, 자신이 참조할 수 있는 변수를 클로저라하는것 같더라. Closure…","html":"<p>😂 해당 스코프(영역)에서, 자신이 참조할 수 있는 변수를 클로저라하는것 같더라.</p>\n<h2 id=\"closure클로저\" style=\"position:relative;\"><a href=\"#closure%ED%81%B4%EB%A1%9C%EC%A0%80\" aria-label=\"closure클로저 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Closure(클로저)</h2>\n<p><code class=\"language-text\">Scope</code>는 함수가 호출될 때가 아니라, 선언했을 때 정해진다고 했었음.</p>\n<h3 id=\"렉시컬-스코핑\" style=\"position:relative;\"><a href=\"#%EB%A0%89%EC%8B%9C%EC%BB%AC-%EC%8A%A4%EC%BD%94%ED%95%91\" aria-label=\"렉시컬 스코핑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렉시컬 스코핑</h3>\n<p>스코프는 함수를 호출할 때가 아니라, 함수를 어디에 선언했는지에 따라 결정된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 1번</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">outerFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">innerFunc</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">innerFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// innerFunc는 함수의 위치가 outerFunc의 내부이기 때문에, outerFunc의 변수 x를 클로저로 가져올 수있으며, innerFunc자신을 참조할 수 있다.</span>\n<span class=\"token function\">outerFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"클로저의-장점\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"클로저의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저의 장점</h3>\n<ol>\n<li>상태유지 : 현재 상태를 기억하고, 변경된 최신 상태를 유지할 수 있다.</li>\n<li>전역 변수의 사용 억제 : 전역변수가 아닌, 즉시실행함수의 지역변수를 클로저를 참조할 수 있게 하여, 다양한 오류를 사전에 방지할 수 있다.</li>\n</ol>\n<h3 id=\"예제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C\" aria-label=\"예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제</h3>\n<div style=\"\n  width : 30%;\n  margin : 0 auto;\n  display : flex;\n  flex-direction : column;\n  align-items : center;\n  border : 1px solid #666666; \n  border-radius : 5px;\n  padding : 0.5em 0;\"\n>\n  <button class=\"toggle\">toggle</button>\n  <div class=\"box\" style=\"width: 100px; height: 100px; background: red;\"></div>\n</div>\n<br>\n<script>\nvar box = document.querySelector('.box');\nvar toggleBtn = document.querySelector('.toggle');\nvar toggle = (function () {\n  var color = false;\n  // ① 클로저를 반환\n  return function () {\n    box.style.background = color ? 'red' : 'blue';\n    // ③ 상태 변경\n    color = !color;\n  };\n})();\ntoggleBtn.onclick = toggle;\n</script>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> toggleBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.toggle'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> toggle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token comment\">// ① 클로저를 반환</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    box<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> color <span class=\"token operator\">?</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n    <span class=\"token comment\">// ③ 상태 변경</span>\n    color <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>color\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 즉시실행함수로, 영구적으로 toggle 이벤트는 return 된 함수임.</span>\n<span class=\"token comment\">// 하지만, closure 속성상, color라는 변수는 존재하고 있음.</span>\n\n<span class=\"token comment\">// ② 이벤트 프로퍼티에 클로저를 할당</span>\n<span class=\"token comment\">// console.dir(toggle) // closure로 color의 값 갖고있음</span>\ntoggleBtn<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> toggle</code></pre></div>\n<p>출처 : <a href=\"https://velog.io/@jakeseo_me/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%9D%BC%EB%A9%B4-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-33%EA%B0%80%EC%A7%80-%EA%B0%9C%EB%85%90-6-%ED%95%A8%EC%88%98%EC%99%80-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84-%EB%B2%88%EC%97%AD-dijuhrub1x\">클로저, 스코프 서진규님 블로그</a></p>","frontmatter":{"title":"Closure, 클로저","date":"July 14, 2020"}}},"pageContext":{"slug":"/Study/Think/Closure/","previous":{"fields":{"slug":"/Study/Think/hoisting/"},"frontmatter":{"title":"Hoisting, 호이스팅","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/ES6/ES6_01_let/"},"frontmatter":{"title":"ES6_let","category":"Study","draft":false,"tag":"ECMA Script"}}}},"staticQueryHashes":["3128451518","3665928227","479399088","479399088"]}