{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Think/setTimout/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"utterances":"sangmin802/sangmin802.github.io"}}},"markdownRemark":{"id":"d6cacbef-0cfc-5e96-b2b8-a7a50f0df83a","excerpt":"🧙‍♀️ 호기심 얼마전 인터뷰를 하면서 받은 질문이 있었다. 이벤트 루프와 관련된 인터뷰를 하면서 받은 질문이였는데, 은 딱 6…","html":"<h2 id=\"️-호기심\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%98%B8%EA%B8%B0%EC%8B%AC\" aria-label=\"️ 호기심 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧙‍♀️ 호기심</h2>\n<p>얼마전 인터뷰를 하면서 받은 질문이 있었다.</p>\n<p>이벤트 루프와 관련된 인터뷰를 하면서 받은 질문이였는데,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'실행'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span>초<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">setTimeout</code>은 딱 60초뒤에 무조건 실행되나요?</p>\n</blockquote>\n<p>내가 대답한 답변은</p>\n<blockquote>\n<p>아니요</p>\n</blockquote>\n<p>였다.</p>\n<h2 id=\"-자신없는-아니요의-근거\" style=\"position:relative;\"><a href=\"#-%EC%9E%90%EC%8B%A0%EC%97%86%EB%8A%94-%EC%95%84%EB%8B%88%EC%9A%94%EC%9D%98-%EA%B7%BC%EA%B1%B0\" aria-label=\" 자신없는 아니요의 근거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>😂 자신없는 “아니요”의 근거</h2>\n<p>자바스크립트는 기본적으로 싱글스레드이다. 하나의 작업영역인 <code class=\"language-text\">Stack</code>에 작업이 쌓이고, 선입 후출의 방식으로 처리가 된다.</p>\n<p>그 중에서도 <code class=\"language-text\">setTimeout</code>, <code class=\"language-text\">Promise</code>, <code class=\"language-text\">Callback함수</code> 등의 비동기 <code class=\"language-text\">webApi</code> 들은 호출이 되면, 백그라운드 영역에서 필요한 시간 혹은 지정된 시간이 소모된 후 <code class=\"language-text\">Que</code> 자료구조에 이후의 콜백함수들이 담기게 된다.</p>\n<p>각각의 <code class=\"language-text\">task</code>, <code class=\"language-text\">microTask</code>의 자료구조에 담기게 되고, <code class=\"language-text\">Promise</code>의 콜백함수가 담기는 <code class=\"language-text\">microTask</code>의 <code class=\"language-text\">Que</code> 자료구조가 선입선출의 방식으로 <code class=\"language-text\">task</code>보다 먼저 실행된다.</p>\n<p>이렇게 메인스레드가 비어있음을 감지한다음 다음 <code class=\"language-text\">que</code>의 작업을 위해 우선순위를 판별하고 작업을 옮겨주는것이 <code class=\"language-text\">EventLoop</code>였다.</p>\n<blockquote>\n<p>내가 알기론 이렇다..</p>\n</blockquote>\n<p>따라서, 우선순위에서 밀리게되거나, 여러개의 작업이 <code class=\"language-text\">que</code>에 중첩이되게 된다면, 어떤 경우는 지정된 시간에 딱 수행되지는 않을것 같다 라는 답을 하였다.</p>\n<h2 id=\"-과연-맞을까\" style=\"position:relative;\"><a href=\"#-%EA%B3%BC%EC%97%B0-%EB%A7%9E%EC%9D%84%EA%B9%8C\" aria-label=\" 과연 맞을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥵 과연 맞을까?</h2>\n<p>당연히 인터뷰에서 나의 답변이 정답인지 아닌지는 얘기해주시지 않았다.</p>\n<p>그래서 궁금증에 한번 실험을 해보았다.</p>\n<h2 id=\"-settimeout-실험\" style=\"position:relative;\"><a href=\"#-settimeout-%EC%8B%A4%ED%97%98\" aria-label=\" settimeout 실험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔮 setTimeout 실험</h2>\n<blockquote>\n<p>참고로 이 실험의 정확성은 제로입니다. 극히 주관적인 생각이 담겨있습니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">첫번째 setTimeout 실행시간 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">두번째 setTimeout 실행시간 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">스크립트가 읽힌 시간 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"-조건\" style=\"position:relative;\"><a href=\"#-%EC%A1%B0%EA%B1%B4\" aria-label=\" 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍯 조건</h3>\n<ul>\n<li>두가지의 <code class=\"language-text\">setTimeout</code>은 모두 0초 뒤에 실행되도록 하며, 실행할 때 실행된 시간을 알려준다.\n<blockquote>\n<p>주관적으로 0초면 사용자의 입장에서 즉시실행이나 다름없다고 생각하였음. 물론, 자바스크립트에서는 아니겠지만</p>\n</blockquote>\n</li>\n<li>동일한 지연시간을 갖고있는 두개의 <code class=\"language-text\">setTimeout</code>을 통해, 똑같은 0초를 지정했을 때, 실행시간의 차를 확인하고자 함.\n<blockquote>\n<p>만약, 두개의 실행시간이 다르다면 무조건 정해진 시간(0초) 뒤에 실행된다는 보장은 없다고 생각됨</p>\n</blockquote>\n</li>\n<li>스크립트가 읽힌 시간과 첫 <code class=\"language-text\">setTimeout</code>이 실행된 시간이 다르다면 첫 <code class=\"language-text\">setTimeout</code> 또한, 바로실행(0초 뒤 실행)이 아니라고 생각됨</li>\n<li>물론, 개발자의 입장에서 비동기 <code class=\"language-text\">Api</code>는 메인스레드가 아닌 백그라운드에서 별도로 실행된 후, 메인스레드에서 모든 작업이 완료된 다음 콜백함수가 실행된다는 점에서 늦게 호출된다는것은 당연하지만, 사용자의 입장에서 0초는 사실 즉시라는것을 생각하고 테스트하였음.</li>\n</ul>\n<h3 id=\"-결과\" style=\"position:relative;\"><a href=\"#-%EA%B2%B0%EA%B3%BC\" aria-label=\" 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚀 결과</h3>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/05/06/setTimout.PNG\" alt=\"setTimout\">\n</div>\n<p>모든 시간이 다르다는 결과가 나옴.</p>\n<p>사실 여러번 새로고침해서 나온 결과긴 하다. 하지만, 애초에 <strong>절대</strong> 라는 수식어가 붙은 시점에서 단 한번의 예외적인 결과가 나오더라도 그 의미는 퇴색되는것이기 때문에 상관없다고 본다.</p>\n<p>즉, <code class=\"language-text\">setTimeout</code>은 지정된 시간에 무조건적으로 실행되는것이 아니라, 상황에 따라 시간이 조금 밀릴 수 있다는 점.</p>\n<h2 id=\"-mdn의-의견\" style=\"position:relative;\"><a href=\"#-mdn%EC%9D%98-%EC%9D%98%EA%B2%AC\" aria-label=\" mdn의 의견 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍑 MDN의 의견</h2>\n<p><code class=\"language-text\">MDN</code>에서 <code class=\"language-text\">setTimeout</code>과 관련하여 확인할 수 있는 글이 있었다.</p>\n<p>실행은 <code class=\"language-text\">que</code>에 대기중인 작업 수에 따라 다릅니다. 왜냐하면 지연(<code class=\"language-text\">delay</code>)은 보장된 시간이 아니라 <strong>요청을 처리하기 위해 필요한 최소의 시간</strong>이기 때문입니다.</p>\n<p>기본적으로 <code class=\"language-text\">setTimeout</code>은 <code class=\"language-text\">setTimeout</code>에 대한 특정 시간 제한을 지정 했더라도 <strong>대기중인 메시지의 모든 코드가 완료 될 때까지 대기</strong>해야합니다.</p>\n<h2 id=\"️-결론\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EA%B2%B0%EB%A1%A0\" aria-label=\"️ 결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧑‍⚖️ 결론</h2>\n<p><code class=\"language-text\">setTimeout</code>의 지정된 시간은 콜백함수가 실질적으로 호출되는 지연시간이 아니라, 요청을 처리하기 위해 필요한 최소의 시간이며, <code class=\"language-text\">que</code>에 중첩된 여러 작업과 같이 상황에 따라 대기시간으로 인해 지연될 수 있다.</p>\n<blockquote>\n<p>아마 <code class=\"language-text\">Promise</code>와 같은 비동기 <code class=\"language-text\">Api</code>들도 비슷한 결과일 것 같다.</p>\n</blockquote>\n<p>이처럼 최대한 예상된 시간에 결과물을 확인할 수 있도록 <code class=\"language-text\">debounce</code>와 <code class=\"language-text\">throttle</code>을 통해 비동기함수들이 중첩되는것을 제어하는것이 아닌가 싶다.</p>\n<p>답변은 잘 한거겠지?</p>","frontmatter":{"title":"setTimeout은 무조건 지정된 시간 이후에 실행될까?","date":"May 06, 2021"}}},"pageContext":{"slug":"/Study/Think/setTimout/","previous":{"fields":{"slug":"/Study/Think/atomic design/"},"frontmatter":{"title":"Atomic Design","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/Think/webSocket Protocol/"},"frontmatter":{"title":"webSocket Protocol","category":"Study","draft":false,"tag":"Think"}}}},"staticQueryHashes":["1162990174","1854831582","2054357557","3128451518"],"slicesMap":{}}