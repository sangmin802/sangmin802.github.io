{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Think/Executed Context_v1_1/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"utterances":"sangmin802/sangmin802.github.io"}}},"markdownRemark":{"id":"f378d191-8044-5ab7-9ce7-6f2d80494c01","excerpt":"참조 : https://poiemaweb.com/js-execution-context 정의 Execution Context : 실행컨텍스트 실행 가능한 코드가 실행되기 위해 필요한 과정 scope, hoisting, this, function, closure등의 동작원리를 담고있는 자바스크립트의 핵심원리이다. 자바스크립트 엔진은 코드를 실행하기 위해 필요한 여러가지 정보를 알고있어야 한다. 변수 : 전역, 지역, 매개변수, 객체의 속성 함수선언 변수의 유효범위(Scope) this…","html":"<blockquote>\n<p>참조 : <a href=\"https://poiemaweb.com/js-execution-context\">https://poiemaweb.com/js-execution-context</a></p>\n</blockquote>\n<h2 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h2>\n<h3 id=\"execution-context--실행컨텍스트\" style=\"position:relative;\"><a href=\"#execution-context--%EC%8B%A4%ED%96%89%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\" aria-label=\"execution context  실행컨텍스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Execution Context : 실행컨텍스트</h3>\n<ul>\n<li>실행 가능한 코드가 실행되기 위해 필요한 과정</li>\n<li>scope, hoisting, this, function, closure등의 동작원리를 담고있는 자바스크립트의 핵심원리이다.</li>\n<li>자바스크립트 엔진은 코드를 실행하기 위해 필요한 여러가지 정보를 알고있어야 한다.\n<ul>\n<li>변수 : 전역, 지역, 매개변수, 객체의 속성</li>\n<li>함수선언</li>\n<li>변수의 유효범위(Scope)</li>\n<li>this</li>\n</ul>\n</li>\n</ul>\n<p>이처럼 실행에 필요한 정보를 형상화, 구분하기위해 실행컨텍스트를 물리적 객체의 형태로 관리함.</p>\n<h3 id=\"자바스크립트의-코드-3가지\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%EC%BD%94%EB%93%9C-3%EA%B0%80%EC%A7%80\" aria-label=\"자바스크립트의 코드 3가지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트의 코드 3가지</h3>\n<ol>\n<li>전역 코드 : 전체 영역에 존재하는 코드 - 실행가능</li>\n<li>Eval 코드 : eval 함수로 실행되는 코드</li>\n<li>함수 코드 : 함수 내에 존재하는 코드 - 실행가능</li>\n</ol>\n<ul>\n<li>GEC(Global Execution Context) : 전역실행컨텍스트</li>\n<li>FEC(Function Execution Context) : 함수실행컨텍스트</li>\n</ul>\n<h3 id=\"실행컨텍스트-쌓이는-과정\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%8C%93%EC%9D%B4%EB%8A%94-%EA%B3%BC%EC%A0%95\" aria-label=\"실행컨텍스트 쌓이는 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행컨텍스트 쌓이는 과정</h3>\n<ol>\n<li>전역 코드로 컨트롤(제어권)이 진입하면, GEC가 생성되고 실행컨텍스트에 쌓인다. GEC는 앱이 종료될 때(페이지에서 나가거나, 브라우저를 닫을 때)까지 유지된다.</li>\n<li>함수 호출시, 해당 함수의 FEC가 생성되며, 이전 EC위에 쌓임.\n<ul>\n<li>현재는 GEC만 쌓여있으니 그 위에 쌓이겠지 피라미드처럼?</li>\n</ul>\n</li>\n<li>함수의 실행이 끝나면, 해당 함수의 FEC를 제거하고, 바로 아래 쌓여있는(직전의) EC에 컨트롤을 넘겨준다.\n<ul>\n<li>현재는 GEC위에 FEC가 쌓여있으니, 함수종료시 해당 FEC가 제거되고, GEC에게 컨트롤이 넘어옴.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"실행-컨텍스트의-3가지-객체\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EC%9D%98-3%EA%B0%80%EC%A7%80-%EA%B0%9D%EC%B2%B4\" aria-label=\"실행 컨텍스트의 3가지 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행 컨텍스트의 3가지 객체</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Execution_Context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">Variable_Object</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// vars, function_declarations, arguments, etc</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">Scope_Chain</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// Variable_Object, all_parant_scopes</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">thisValue</span><span class=\"token operator\">:</span> <span class=\"token string\">'Context_Object'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"variable-objectvo변수객체\" style=\"position:relative;\"><a href=\"#variable-objectvo%EB%B3%80%EC%88%98%EA%B0%9D%EC%B2%B4\" aria-label=\"variable objectvo변수객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable Object(VO/변수객체)</h3>\n<p>실행 컨텍스트가 생성되면, 자바스크립트 엔진은 실행에 필요한 여러 정보들을 담은 객체를 생성한다. 이를 Variable Object(VO/변수객체)라고 한다. VO는 코드가 실행될 때 엔진에 의해 참조되며, 코드에서 접근할 수 없다.</p>\n<ul>\n<li>VO의 구성</li>\n</ul>\n<ol>\n<li>변수</li>\n<li>매개변수(parameter), 인수(arguments)</li>\n<li>함수 선언(함수 표현식은 제외)</li>\n</ol>\n<p>VO는 실행 컨텍스트의 속성(위 객체를 보삼)으로, 객체의 값을 갖는다.<br>\n그런데, 전역코드로 생성되는 GEC의 VO와 함수로 생성되는 FEC의 VO가 가리키는 객체가 서로 다르다.</p>\n<ul>\n<li>GEC일때 VO의 값</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Globl_Execution_Context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">Variable_Object</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Global Object(Go) 라고 함.</span>\n    <span class=\"token function-variable function\">foo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역함수 foo'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">var</span><span class=\"token operator\">:</span> <span class=\"token string\">'전역변수 var'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ... 이하동일</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>VO는 유일하며(단 하나뿐. 당연하지), 최상위위치하고 모든 전역변수, 전역함수 등을 포함하는 전역객체(Global Object/GO)를 가르킨다.</li>\n</ul>\n<br>\n<ul>\n<li>FEC일때 VO의 값</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Function_Execition_Context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">Variable_Object</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Actibation Object(AO) 라고 함.</span>\n    <span class=\"token literal-property property\">arrguments</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">innerFunction</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'내부함수'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">innerVar</span><span class=\"token operator\">:</span> <span class=\"token string\">'지역변수 innerVar'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ... 이하동일</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>VO는 Activation(AO/활성객체)를 가리키며, 해당 함수의 매개변수와 인수들의 정보를 배열의 형태로 담고있는 객체인 argumetns object가 추가된다.</li>\n</ul>\n<h3 id=\"scope-chainsc스코프체인\" style=\"position:relative;\"><a href=\"#scope-chainsc%EC%8A%A4%EC%BD%94%ED%94%84%EC%B2%B4%EC%9D%B8\" aria-label=\"scope chainsc스코프체인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope Chain(SC/스코프체인)</h3>\n<p>전역 또는 함수가 참조할 수 있는 변수, 함수선언 등의 정보를 담고있는 전역객체(GO) 또는 활성객체(AO)의 리스트를 가리킨다.</p>\n<ul>\n<li>FEC의 SC는 자신의 VO인 AO와 GEC의 VO인 GO 두개를 리스트화 하여 갖고있다.</li>\n<li>함수의 경우, 전역의 변수도 사용할 수 있는 특징이기 때문!\nGEC의 SC는 자신의 VO인 GO만 리스트에 갖고있다.</li>\n</ul>\n<p>자바스크립트는 스코프 체인을 통해 렉시컬 스코프(해당 변수/함수의 위치)를 파악한다.<br>\n함수가 중첩되어있을 경우, 가장 내부의 함수는 부모함수와 전역의 변수를 참조할 수 있다. 함수실행중, 변수를 만나면 현재Scope에서 탐색하고, 없으면 상위로 올라가면서 찾는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">outerScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> variable <span class=\"token operator\">=</span> <span class=\"token string\">'외부변수'</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">innerScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    variable <span class=\"token operator\">=</span> <span class=\"token string\">'내부변수'</span> <span class=\"token comment\">// 지우면 외부변수가 출력됨</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>variable<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">innerScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">outerScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"this-value\" style=\"position:relative;\"><a href=\"#this-value\" aria-label=\"this value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>this value</h3>\n<p>this 프로퍼티에는 this의 값이 할당된다.</p>","frontmatter":{"title":"실행컨텍스트1(Executed Context)","date":"July 10, 2020"}}},"pageContext":{"slug":"/Study/Think/Executed Context_v1_1/","previous":{"fields":{"slug":"/Study/Think/Executed Context_v2/"},"frontmatter":{"title":"실행컨텍스트(Executed Context) 더 쉽게!","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/Think/scope/"},"frontmatter":{"title":"Scope, 영역","category":"Study","draft":false,"tag":"Think"}}}},"staticQueryHashes":["1162990174","1854831582","2054357557","3128451518"],"slicesMap":{}}