{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Think/module, bundler/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"sangmin802/sangmin802.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"6cc2bdb5-8548-5061-a521-3a456463d25f","excerpt":"21-11-2…","html":"<blockquote>\n<p>21-11-29 업데이트</p>\n</blockquote>\n<h1 id=\"모듈화에대한-욕구\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88%ED%99%94%EC%97%90%EB%8C%80%ED%95%9C-%EC%9A%95%EA%B5%AC\" aria-label=\"모듈화에대한 욕구 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈화에대한 욕구</h1>\n<p>개발되는 앱에서 사용되는 스크립트의 양이 많아지고, 규모가 커지면서 사람들은 비슷한 역할을 코드들을 묶어서 관리하고, 재사용가능한 코드들을 필요한 상황에 가져와서(<code class=\"language-text\">import</code>) 혹은 내보내는등(<code class=\"language-text\">export</code>)을 통해 관리를 하고싶어하게 되었다.</p>\n<p>즉, 규모있는 코드를 작은단위로 잘라내고 필요에 따라 가져와서 사용하고자하는 욕구가 생겼다.</p>\n<p>그때무터 모듈이라는 개념이 생기고 위의 역할을 수행하게 되었다.</p>\n<p>이렇게 생성된 모듈들은 특징이 있었는데,</p>\n<h2 id=\"독자적인-스코프를-사용함\" style=\"position:relative;\"><a href=\"#%EB%8F%85%EC%9E%90%EC%A0%81%EC%9D%B8-%EC%8A%A4%EC%BD%94%ED%94%84%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A8\" aria-label=\"독자적인 스코프를 사용함 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>독자적인 스코프를 사용함</h2>\n<p>이전 모듈이 아니였다면 스크립트 내에 생성된 변수들은 모두 전역변수로서 하나의 스코프를 공유해, 종종 중첩되는 문제가 발생하였다.</p>\n<p>하지만 스크립트를 기능별로 혹은 어떠한 기준을 통해 모듈화를 하여 사용하면 그 모듈 내에서만의 독자적인 스코프를 갖게된다.</p>\n<h2 id=\"단-한번의-실행\" style=\"position:relative;\"><a href=\"#%EB%8B%A8-%ED%95%9C%EB%B2%88%EC%9D%98-%EC%8B%A4%ED%96%89\" aria-label=\"단 한번의 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단 한번의 실행</h2>\n<p>만약 모듈 내에 실행이 되는 코드 혹은 변수, 상수 등이 선언되어있다면 여러곳에서 해당 모듈이 재사용 되더라도 단 한번만 생성이 된다.</p>\n<blockquote>\n<p>하나의 변수를 여러 다른 모듈에서도 사용 가능하고, 공통적인 <code class=\"language-text\">key</code>를 바라본다.</p>\n</blockquote>\n<p>거대해진 스크립트를 기준에 따라 구분하고, 필요에따라 가져와서 사용을 하는데에 더불어 독자적인 스코프를 사용하여 더욱 안전한 개발을 할 수 있게 되었다.</p>\n<p>앱의 규모가 커지면서 위와 같은 문제가 발생을 하였지만, 개발자의 측면에서의 개선이 커보인다.</p>\n<p>위와 같은 변화에 있어서 클라이언트 상에서도 문제가 있었는데, 스크립트 파일 등 하나의 웹페이지를 구성하는데 필요한 자원들의 갯수가 많아지면서 클라이언트에서 서버로 요청을 하는 횟수가 많아졌다.</p>\n<p>즉, 사용자가 첫 화면을 보기위해 기다려야하는시간이 증가하게 되었다.</p>\n<blockquote>\n<p>각각 브라우저바다 서버로 보낼수 있는 요청의 숫자가 다르고 심지어 제약도되어있기 때문에 이러한 문제는 크게 다가왔다.</p>\n</blockquote>\n<p>그래서 앱의 규모가 커져도 사용하는 자원을 얻기위해 서버에 요청하는 횟수는 적은 상태로 유지하고자 하는 욕구가 생겼다.</p>\n<p>사실 위와 같이 서버에 요청을 보내는것을 최소하하기 위한 방법으로는 적은 갯수의 스크립트 파일에 모든 내용을 담아서 요청을 하는것이다.</p>\n<p>어찌보면 단순해보이지만, 당장 생각해보아도 유지보수를 하는데 큰 어려움이 있어보인다.</p>\n<p>그렇다면 유지보수를 위해 기능별로 추상화한 모듈들을 사용하여도 서버로의 요청 횟수는 적게 유지하여 클라이언트상에서의 경험을 좋게할 수 있는 방법은 없을까?</p>\n<h1 id=\"bundler---webpack\" style=\"position:relative;\"><a href=\"#bundler---webpack\" aria-label=\"bundler   webpack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bundle(r) - webpack</h1>\n<p>이전 코드들의 모듈화를 거치면서 스크립트들 어떠한 기준으로 작은 단위로 구분하게 되었는데</p>\n<p>조금 더 확장하여서 스크립트 뿐만 아니라 <code class=\"language-text\">image</code>, <code class=\"language-text\">style</code>, <code class=\"language-text\">HTML</code>, <code class=\"language-text\">css</code> 모두를 하나의 모듈이라는 개념으로 약속을 하는 것이다.</p>\n<ol>\n<li>스크립트의 경우 기본적인 모듈의 특징처럼 독자적인 유효한 범위를 갖게된다.</li>\n<li>아래에 나오겠지만, 최신의 스크립트에 대해 아직 호환되지 않는 브라우저에 있어서, 이전 버전의 스크립트로 트랜스파일해주는 등의 여러 도움을 주는 모듈들을 함께 사용할 수 있다.</li>\n<li>2번과 유사해보이지만 <code class=\"language-text\">sass -&gt; css</code>로 변환한다던지, 이미지를 압축한다던지등의 일을 수행해준다.</li>\n<li>큰 이유인 모듈화 된 자원들을 서로 연관된것들끼리 압축하여 서버로의 요청을 전달하는 횟수를 줄여준다.</li>\n</ol>\n<h2 id=\"bundler-종류\" style=\"position:relative;\"><a href=\"#bundler-%EC%A2%85%EB%A5%98\" aria-label=\"bundler 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bundler 종류</h2>\n<ul>\n<li>⭐Webpack⭐</li>\n<li>parcel</li>\n<li>browserify</li>\n</ul>\n<h3 id=\"webpack-설치\" style=\"position:relative;\"><a href=\"#webpack-%EC%84%A4%EC%B9%98\" aria-label=\"webpack 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webpack 설치</h3>\n<ul>\n<li><code class=\"language-text\">npm install --save-dev webpack webpack-cli</code></li>\n<li><code class=\"language-text\">webpack</code>의 기본 설정은 <code class=\"language-text\">js</code>나 <code class=\"language-text\">json</code>형식의 파일만 번들링 할 수 있다. 따라서, 필요에 따라 <code class=\"language-text\">rules</code> 속성에 <code class=\"language-text\">css</code>, <code class=\"language-text\">img</code> 등 적합한 <code class=\"language-text\">loader</code>를 사용하도록 설정해줘야 한다.</li>\n<li><a href=\"https://bogyum-uncle.tistory.com/111\">webpack 로더의 종류 검색</a></li>\n<li>\n<p><code class=\"language-text\">package.json</code>의 <code class=\"language-text\">scripts</code>에 간단한 명령어로 빌드를 실행 할 수 있도록 지정해준다</p>\n<blockquote>\n<p><code class=\"language-text\">&quot;build&quot;: &quot;webpack&quot;</code></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"entry\" style=\"position:relative;\"><a href=\"#entry\" aria-label=\"entry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>entry</h3>\n<ul>\n<li>번들링의 시작이 되는 js파일을 지정해준다.</li>\n<li>필요에 따라, 여러개의 js파일을 지정해줄 수 있다.</li>\n<li>\n<p>시작이 되는 js파일내부에 이후의 js파일들이 모두 모듈화 되어 import로 연결되어있어햐 한다.</p>\n<blockquote>\n<p>css파일 또한 마찬가지. React 기본 구조를 생각해보면 될 듯</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"output\" style=\"position:relative;\"><a href=\"#output\" aria-label=\"output permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>output</h3>\n<ul>\n<li>번들링이 완료되었을 때 저장되는 곳이다.</li>\n</ul>\n<h3 id=\"번들링-진행-과정\" style=\"position:relative;\"><a href=\"#%EB%B2%88%EB%93%A4%EB%A7%81-%EC%A7%84%ED%96%89-%EA%B3%BC%EC%A0%95\" aria-label=\"번들링 진행 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>번들링 진행 과정</h3>\n<ol>\n<li><code class=\"language-text\">webpack</code>이 실행이 되면, <code class=\"language-text\">entry</code>를 통해 기준이되는 파일을 분석함.</li>\n<li><code class=\"language-text\">output</code>의 경로를 통해 <code class=\"language-text\">build</code>된 파일을 저장함.</li>\n<li><code class=\"language-text\">html</code>파일의 <code class=\"language-text\">script</code>경로는 <code class=\"language-text\">build</code>된 파일로 하면 됨.</li>\n</ol>\n<h2 id=\"tree-shaking\" style=\"position:relative;\"><a href=\"#tree-shaking\" aria-label=\"tree shaking permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tree shaking</h2>\n<p>여러 모듈을 하나의 <code class=\"language-text\">entry</code>로 연결하여 서버로의 요청이 전달되는 횟수를 획기적으로 줄일 수 있었지만, 그 용량이 거대해지는상황은 필수적으로 오게된다.</p>\n<p>이 때, 모듈에서 불필요한 코드들을 정리하는 등을 통해 용량을 줄이는것을 <code class=\"language-text\">Tree shaking</code>이라고 한다.</p>\n<blockquote>\n<p>사용되지 않는 <code class=\"language-text\">export</code>를 <code class=\"language-text\">import</code>하는 코드들을 제외시키는 등..</p>\n</blockquote>\n<ul>\n<li><a href=\"https://webpack.kr/guides/tree-shaking/\">webpack Tree shaking</a></li>\n</ul>\n<h1 id=\"babel\" style=\"position:relative;\"><a href=\"#babel\" aria-label=\"babel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Babel</h1>\n<ul>\n<li>\n<p><code class=\"language-text\">ES</code>시리즈가 나올수록, 개발자들은 최신의 API들로 편하게 프로그래밍을 할 수 있게되었지만, <code class=\"language-text\">IE</code>와 같은 브라우저에서는 작동되지 않는 경우가 있다. 그런 경우를 위해, 최신 스크립트를 이전 버전의 스크립트로 컴파일하는 기능을 가지고 있다.</p>\n<blockquote>\n<p><code class=\"language-text\">IE</code>에 대한 지원이 하나 둘 끝나가고 있다. 하나도 안불쌍하고 잘가라. <code class=\"language-text\">Chrome</code>만세</p>\n</blockquote>\n</li>\n</ul>\n<p><code class=\"language-text\">ES5</code>와 같이 호환되는 스크립트로 트랜스파일을 해주는 과정에서 <code class=\"language-text\">Map</code>, <code class=\"language-text\">Set</code>과 같이 새로 생긴 기능들이 존재하지 않는 환경에서 유사하게 작동될 수 있는 코드로 바꿔주는 것을 <strong>폴리필</strong>이라고 한다.</p>\n<ul>\n<li><a href=\"https://ko.javascript.info/polyfills\">바벨과 폴리필</a></li>\n</ul>\n<h2 id=\"babel-설치\" style=\"position:relative;\"><a href=\"#babel-%EC%84%A4%EC%B9%98\" aria-label=\"babel 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Babel 설치</h2>\n<ul>\n<li><code class=\"language-text\">npm install --save-dev @babel/core @babel/cli @babel/preset-env</code></li>\n<li><code class=\"language-text\">npm install --save-dev babel-loader</code></li>\n<li><code class=\"language-text\">npm install --save @babel/polyfill</code></li>\n<li>preset의 옵션을 통해, 트랜스파일할 버전 및, 적용된 버전값들을 디버깅할 수 있다.</li>\n</ul>\n<h1 id=\"완성-예제\" style=\"position:relative;\"><a href=\"#%EC%99%84%EC%84%B1-%EC%98%88%EC%A0%9C\" aria-label=\"완성 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완성 예제</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> MiniCssExtractPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mini-css-extract-plugin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    index<span class=\"token operator\">:</span> <span class=\"token string\">'./src/js/index.js'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// es5에 존재하지 않는 es6의 메서드나 생성자들도 지원토록함</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// build를 할때(분석할 때) 기준이 되는 경로</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// build(분석)을 한 내용이 저장될 곳</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'./js/[name].js'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// publicPath : 'dist' // devserver로 확인하기 위함</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// 여러개의 js파일이 생성되길 원할 때</span>\n  <span class=\"token comment\">// entry : {</span>\n  <span class=\"token comment\">//   main : './src/js/index.js',</span>\n  <span class=\"token comment\">//   blog : './src/js/blog.js'</span>\n  <span class=\"token comment\">// },</span>\n  <span class=\"token comment\">// output : {</span>\n  <span class=\"token comment\">//   filename : './js/[name].js',</span>\n  <span class=\"token comment\">//   path : path.resolve(__dirname, 'dist'),</span>\n  <span class=\"token comment\">// },</span>\n\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 최신의 ES스크립트를 지원가능한 버전으로 컴파일하는 babel</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        include<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src/js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">{</span>\n                  targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    browsers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'last 2 versions'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                  debug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        sideEffects<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            loader<span class=\"token operator\">:</span> MiniCssExtractPlugin<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      minify<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        collapseWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      hash<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'./index.html'</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      minify<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        collapseWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      hash<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'./menu.html'</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'menu.html'</span><span class=\"token punctuation\">,</span>\n      excludeChunks<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// MPA에서, 특정 html은 해당 js파일을 제외함.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">MiniCssExtractPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'./css/index.css'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"싱글스레드가-아닌-멀티스레드-기반-rust를-통한-빌드시간-단축\" style=\"position:relative;\"><a href=\"#%EC%8B%B1%EA%B8%80%EC%8A%A4%EB%A0%88%EB%93%9C%EA%B0%80-%EC%95%84%EB%8B%8C-%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%93%9C-%EA%B8%B0%EB%B0%98-rust%EB%A5%BC-%ED%86%B5%ED%95%9C-%EB%B9%8C%EB%93%9C%EC%8B%9C%EA%B0%84-%EB%8B%A8%EC%B6%95\" aria-label=\"싱글스레드가 아닌 멀티스레드 기반 rust를 통한 빌드시간 단축 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>싱글스레드가 아닌 멀티스레드 기반 Rust를 통한 빌드시간 단축</h2>\n<p>차세대 병렬스레드 언어인 Rust 기반 컴파일(트랜스파일) + 빌드 툴 swc\n<code class=\"language-text\">transform</code> 을 통해, <code class=\"language-text\">babel</code> 트랜스파일링 대체(멀티스레드), <code class=\"language-text\">minify</code>를 통해 <code class=\"language-text\">terser</code> 대체\n<code class=\"language-text\">next12</code>부터는 기본적으로 <code class=\"language-text\">swc</code> 기반 빌드를 진행함(트랜스파일 포함). 물론, <code class=\"language-text\">babel</code>로 변경하는것도 가능</p>\n<ul>\n<li><a href=\"https://fe-developers.kakaoent.com/2022/220217-learn-babel-terser-swc/\">swc</a></li>\n<li><a href=\"https://jbee.io/web/from-2021-to-2022/\">2022 개발 관심사</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=4RJxyGJQe4o\">feconf swc</a></li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://joshua1988.github.io/webpack-guide/guide.html\">webpack 핸드북</a></li>\n<li><a href=\"https://ko.javascript.info/modules-intro#ref-203\">모듈</a></li>\n</ul>","frontmatter":{"title":"모듈과 번들러","date":"July 06, 2020"}}},"pageContext":{"slug":"/Study/Think/module, bundler/","previous":{"fields":{"slug":"/Study/Think/SSR&CSR/"},"frontmatter":{"title":"SSR? CSR?","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/Think/Http(s)&REST/"},"frontmatter":{"title":"Http(s)? REST?","category":"Study","draft":false,"tag":"Think"}}}},"staticQueryHashes":["3128451518","3665928227","479399088","479399088"]}