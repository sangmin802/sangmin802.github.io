{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/Vue/2020-09-01-Vue_04_computed&watch/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin.com","author":"SangMin","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"eb520519-1935-5b1b-ac19-78c8519abf41","excerpt":"Computed & Watch Computed Computed 정의 템플릿이나 DOM 내에 표현식을 넣으면 편리하긴 하다.  하지만, 너무 많은 연산을 템플릿이나 DOM 내에서 하면 코드가 비대해지고 유지보수가 어려워진다.\n복잡한 로직이라면 반드시 Computed속성을 사용해야한다.\n메소드로 계산된 data값을 즉시바인딩한다고 생각하자.\nComputed에게 감지할 수 있는 data의 값은 필수적이다. Computed vs Methods computed나 methods…","html":"<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script> \n<script src=\"https://unpkg.com/axios@0.12.0/dist/axios.min.js\"></script>\n<script src=\"https://unpkg.com/lodash@4.13.1/lodash.min.js\"></script>\n<h1 id=\"computed--watch\" style=\"position:relative;\"><a href=\"#computed--watch\" aria-label=\"computed  watch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Computed &#x26; Watch</h1>\n<h2 id=\"computed\" style=\"position:relative;\"><a href=\"#computed\" aria-label=\"computed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Computed</h2>\n<h3 id=\"computed-정의\" style=\"position:relative;\"><a href=\"#computed-%EC%A0%95%EC%9D%98\" aria-label=\"computed 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Computed 정의</h3>\n<p>템플릿이나 DOM 내에 표현식을 넣으면 편리하긴 하다.</p>\n<blockquote>\n<p><code class=\"language-<div><\"> message.split(&#39;&#39;).reverse().join(&#39;&#39;) </code></p>\n</blockquote>\n<p>하지만, 너무 많은 연산을 템플릿이나 DOM 내에서 하면 코드가 비대해지고 유지보수가 어려워진다.<br>\n복잡한 로직이라면 반드시 Computed속성을 사용해야한다.<br>\n메소드로 계산된 data값을 즉시바인딩한다고 생각하자.<br>\nComputed에게 감지할 수 있는 data의 값은 필수적이다.</p>\n<h3 id=\"computed-vs-methods\" style=\"position:relative;\"><a href=\"#computed-vs-methods\" aria-label=\"computed vs methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Computed vs Methods</h3>\n<ul>\n<li>\n<p>computed나 methods 모두 출력되는 결과는 동일하다. 다만, </p>\n<ul>\n<li>\n<p>computed로 연결되어있는 data의 값이 변하지 않는 한, 해당 computed는 절대 실행되지 않는다.</p>\n<blockquote>\n<p>즉, DOM이나 템플릿에서 computed를 한번을 쓰든, 백번을 쓰든 연관된 data가 달라지지 않는다면 한번만 실행되고 그 실행된 값을 저장(캐싱)하여 재활용한다.</p>\n</blockquote>\n</li>\n<li>methods는 DOM이나 템플릿에서 입력될 때마다 호출된다.</li>\n</ul>\n</li>\n<li>결과적으로 사용자의 요청인 이벤트와 바인딩된 메소드가 필요할 경우, methods를 사용하고 그렇지 않고 이미 가지고있는 data를 기반으로 재가공이 필요하다면 computed를 사용하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// HTML</span>\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"Computed\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>원본 메시지 <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>message<span class=\"token operator\">%</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>역순 메시지 <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>reversedMessage<span class=\"token operator\">%</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// Script</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el <span class=\"token operator\">:</span> <span class=\"token string\">'#Computed'</span><span class=\"token punctuation\">,</span>\n  delimiters <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'&lt;%'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'%>'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  data <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message <span class=\"token operator\">:</span> <span class=\"token string\">'안녕하세요'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  computed <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">reversedMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"결과값\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC%EA%B0%92\" aria-label=\"결과값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과값</h3>\n<p>{::nomarkdown}</p>\n<div style=\"width : 80%; margin : 0 auto; border : 1px solid #999; border-radius : 1em; padding : 1em;\">\n  <div id=\"Computed\">\n    <p>원본 메시지 : <%message%></p>\n    <p>역순 메시지 : <%reversedMessage%></p>\n  </div>\n</div>\n{:/}\n<h2 id=\"watch\" style=\"position:relative;\"><a href=\"#watch\" aria-label=\"watch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Watch</h2>\n<h3 id=\"watch-정의\" style=\"position:relative;\"><a href=\"#watch-%EC%A0%95%EC%9D%98\" aria-label=\"watch 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Watch 정의</h3>\n<p>Vue에서 가장 기본적인 속성으로 데이터의 변경에 반응하는 일반적인 방법이다. 대부분의 경우 computed가 더 적합하지만, 사용자가 만든 감시자가 필요한 경우가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// HTML</span>\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"Watch\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n    입력하기\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"question\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>answer<span class=\"token operator\">%</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token comment\">// Script</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el <span class=\"token operator\">:</span> <span class=\"token string\">'#Watch'</span><span class=\"token punctuation\">,</span>\n  delimiters <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'&lt;%'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'%>'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  data <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    question <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    answer <span class=\"token operator\">:</span> <span class=\"token string\">'질문을 하기 전까지는 대답할 수 없습니다.'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  watch <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">question</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// data의 값과 같은 명의 메소드로 설정하여 해당 데이터의 값이 변결될 때마다 실행</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>answer <span class=\"token operator\">=</span> <span class=\"token string\">'입력을 기다리는중...'</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAnswer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    getAnswer <span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>question<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>answer <span class=\"token operator\">=</span> <span class=\"token string\">'질문에는 일반적으로 물음표가 포함됩니다.'</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>answer <span class=\"token operator\">=</span> <span class=\"token string\">'생각중...'</span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://yesno.wtf/api'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>answer <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">capitalize</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>answer<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>answer <span class=\"token operator\">=</span> err<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">500</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"결과값-1\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC%EA%B0%92-1\" aria-label=\"결과값 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과값</h3>\n<p>{::nomarkdown}</p>\n<div style=\"width : 80%; margin : 0 auto; border : 1px solid #999; border-radius : 1em; padding : 1em;\">\n  <div id=\"Watch\">\n    <p>\n      입력하기\n      <input type=\"text\" v-model=\"question\">\n    </p>\n    <p><%answer%></p>\n  </div>\n</div>\n{:/}\n<h2 id=\"computed-vs-watch-vs-methods\" style=\"position:relative;\"><a href=\"#computed-vs-watch-vs-methods\" aria-label=\"computed vs watch vs methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>computed vs watch vs methods</h2>\n<h3 id=\"computed-1\" style=\"position:relative;\"><a href=\"#computed-1\" aria-label=\"computed 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>computed</h3>\n<ul>\n<li>특정 data의 값을 기반으로 작동하는 단순 표현식?</li>\n<li>\n<p>data가 결과값의 초기값을 가질 필요 없이, 메소드명으로 즉시 바인딩 가능.</p>\n<h3 id=\"watch-1\" style=\"position:relative;\"><a href=\"#watch-1\" aria-label=\"watch 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>watch</h3>\n</li>\n<li>특정 data를 감시하고 있다가, 변화가 있을 때 해당 data값이 속성명인 함수를 콜백함수로 실행시킨다.</li>\n<li>Vue의 기본적인 기능이기 때문에 꼭 data에 초기값을 가지고 있어야 한다.</li>\n<li>해당 콜백함수의 첫번째 인자는 바뀐 data값, 두번째 인자는 바뀌기 전 data값이다.</li>\n<li>\n<p>methods랑 비슷해보이지만, 사용자의 요청이 없어도 data가 바뀌면 스스로 작동한다.</p>\n<h3 id=\"methods\" style=\"position:relative;\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>methods</h3>\n</li>\n<li>사용자의 요청이 있을 때만 실행이 된다.</li>\n</ul>\n<h2 id=\"computed-vs-watch\" style=\"position:relative;\"><a href=\"#computed-vs-watch\" aria-label=\"computed vs watch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>computed vs watch</h2>\n<ul>\n<li>되도록 computed를 사용하도록 하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// HTML</span>\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"Computed_vs_Watch\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>fullName<span class=\"token operator\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token comment\">// Script</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el <span class=\"token operator\">:</span> <span class=\"token string\">'#Computed_vs_Watch'</span><span class=\"token punctuation\">,</span>\n  delimiters <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'&lt;%'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'%>'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  data <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// fullName : '',</span>\n    firstName <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    lastName <span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> <span class=\"token string\">'박'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName <span class=\"token operator\">=</span> <span class=\"token string\">'상민'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// watch : {</span>\n  <span class=\"token comment\">//   firstName(newVal, oldVal){</span>\n  <span class=\"token comment\">//     this.fullName = newVal + this.lastName;</span>\n  <span class=\"token comment\">//   },</span>\n  <span class=\"token comment\">//   lastName(newVal, oldVal){</span>\n  <span class=\"token comment\">//     this.fullName = this.firstName + newVal;</span>\n  <span class=\"token comment\">//   },</span>\n  <span class=\"token comment\">// },</span>\n  computed <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fullName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token operator\">+</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"결과값-2\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC%EA%B0%92-2\" aria-label=\"결과값 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과값</h3>\n<p>{::nomarkdown}</p>\n<div style=\"width : 80%; margin : 0 auto; border : 1px solid #999; border-radius : 1em; padding : 1em;\">\n  <div id=\"Computed_vs_Watch\">\n    <%fullName%>\n  </div>\n</div>\n{:/}\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<p><a href=\"https://kr.vuejs.org/v2/guide/computed.html\">Vue.js 공식가이드 computed&#x26;watch</a></p>\n<script>\nnew Vue({\n  el : '#Computed',\n  delimiters : ['<%', '%>'],\n  data : {\n    message : '안녕하세요'\n  },\n  computed : {\n    reversedMessage(){\n      return this.message.split('').reverse().join('');\n    }\n  },\n})\n\nnew Vue({\n  el : '#Watch',\n  delimiters : ['<%', '%>'],\n  data : {\n    question : '',\n    answer : '질문을 하기 전까지는 대답할 수 없습니다.'\n  },\n  watch : {\n    question(){ // data의 값과 같은 명의 메소드로 설정하여 해당 데이터의 값이 변결될 때마다 실행\n      this.answer = '입력을 기다리는중...'\n      this.getAnswer();\n    }\n  },\n  methods : {\n    getAnswer : _.debounce(\n      function(){\n        if(!this.question.includes('?')){\n          this.answer = '질문에는 일반적으로 물음표가 포함됩니다.';\n          return\n        }\n        this.answer = '생각중...'\n        fetch('https://yesno.wtf/api')\n        .then(res => res.json())\n        .then(data => {\n          this.answer = _.capitalize(data.answer)\n        })\n        .catch((err) => {\n          this.answer = err;\n        })\n      },\n      500\n    )\n  }\n})\n\nnew Vue({\n  el : '#Computed_vs_Watch',\n  delimiters : ['<%', '%>'],\n  data : {\n    // fullName : '',\n    firstName : '',\n    lastName : ''\n  },\n  created(){\n    setTimeout(() => {\n      this.firstName = '박',\n      this.lastName = '상민'\n    }, 1000)\n  },\n  // watch : {\n  //   firstName(newVal, oldVal){\n  //     this.fullName = newVal + this.lastName;\n  //   },\n  //   lastName(newVal, oldVal){\n  //     this.fullName = this.firstName + newVal;\n  //   },\n  // },\n  computed : {\n    fullName(){\n      return this.firstName+this.lastName;\n    }\n  }\n})\n</script>","frontmatter":{"title":"Vue Computed & Watch","date":"September 01, 2020"}}},"pageContext":{"slug":"/Study/Vue/2020-09-01-Vue_04_computed&watch/","previous":{"fields":{"slug":"/Study/Vue/2020-08-31-Vue_03_template/"},"frontmatter":{"title":"Vue 템플릿 문법","category":"Study","draft":false}},"next":{"fields":{"slug":"/Study/Vue/2020-09-02-Vue_05_class&style/"},"frontmatter":{"title":"Vue Class & Style","category":"Study","draft":false}}}},"staticQueryHashes":["3128451518","3665928227"]}