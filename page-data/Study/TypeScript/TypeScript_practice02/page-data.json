{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/TypeScript/TypeScript_practice02/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"f23b8edd-8d1d-5e42-81dc-fd7f3ff84051","excerpt":"Loa-Hands 이전에 만들었던 앱을 타입스크립트로 바꿔보려한다. 부분의 수정과, 부분을 손봐보았다. Reducer 에는 와 가 해당 class를 타입으로 갖고있는데, 이전에 지정해주었던 은 의 타입만을 허용하고 있었다. 따라서, 로 해당 를 확인했을 때, 와 의 유니온타입들중 유일하게 겹쳐서 유효한 속성은 뿐이라, homeData의 값을 설정할 수 없었다. 또한, 이후 하위컴포넌트에 속성으로 homeData를 보내고자 할 때, 유니온타입이 아닌 homeData…","html":"<h1 id=\"loa-hands\" style=\"position:relative;\"><a href=\"#loa-hands\" aria-label=\"loa hands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loa-Hands</h1>\n<ul>\n<li>이전에 만들었던 앱을 타입스크립트로 바꿔보려한다.</li>\n<li><code class=\"language-text\">reducer</code>부분의 수정과, <code class=\"language-text\">Header</code>부분을 손봐보았다.</li>\n</ul>\n<h2 id=\"reducer\" style=\"position:relative;\"><a href=\"#reducer\" aria-label=\"reducer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reducer</h2>\n<ul>\n<li><code class=\"language-text\">RootState</code>에는 <code class=\"language-text\">HomeData</code>와 <code class=\"language-text\">UserData</code>가 해당 class를 타입으로 갖고있는데, 이전에 지정해주었던 <code class=\"language-text\">IInitalState</code>은 <code class=\"language-text\">null</code>의 타입만을 허용하고 있었다. 따라서, <code class=\"language-text\">useSelector</code>로 해당 <code class=\"language-text\">state</code>를 확인했을 때, <code class=\"language-text\">IInitalState</code>와 <code class=\"language-text\">RootState</code>의 유니온타입들중 유일하게 겹쳐서 유효한 속성은 <code class=\"language-text\">isLoading</code>뿐이라, homeData의 값을 설정할 수 없었다.</li>\n<li>\n<p>또한, 이후 하위컴포넌트에 속성으로 homeData를 보내고자 할 때, 유니온타입이 아닌 homeData타입을 갖고 갈 수 있도록, 재지정해주었다.</p>\n<div style=\"text-align : center\">\n<img src=\"/img/2020/12/25/5.PNG?raw=true\" alt=\"5\">\n</div>\n<br>\n<div style=\"text-align : center\">\n변경\n</div>\n<br>\n<div style=\"text-align : center\">\n<img src=\"/img/2020/12/29/1.PNG?raw=true\" alt=\"1\">\n</div>\n</li>\n</ul>\n<h2 id=\"headercontainer\" style=\"position:relative;\"><a href=\"#headercontainer\" aria-label=\"headercontainer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HeaderContainer</h2>\n<ul>\n<li>기존 <code class=\"language-text\">function</code>으로 시작하는 컴포넌트에서, <code class=\"language-text\">React.FC</code>의 타입을 갖는 함수로 다시 만들어주었다.</li>\n<li><code class=\"language-text\">useSelector</code>에서 받아오는 <code class=\"language-text\">state</code>의 타입은 이전에 생성했던 <code class=\"language-text\">RootState</code>를 연결해준다.</li>\n<li>\n<p><code class=\"language-text\">react-redux</code>공문을 보니, <code class=\"language-text\">dispatch</code>는 <code class=\"language-text\">useDispatch</code>를 통한 결과값이므로 별도의 타입을 지정해줄 필요가 없다하여 모두 지웠다.</p>\n<div style=\"text-align : center\">\n<img src=\"/img/2020/12/29/2.PNG?raw=true\" alt=\"2\">\n</div>\n</li>\n</ul>\n<h2 id=\"header\" style=\"position:relative;\"><a href=\"#header\" aria-label=\"header permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Header</h2>\n<ul>\n<li>기존 <code class=\"language-text\">function</code>으로 시작하는 컴포넌트에서, <code class=\"language-text\">React.FC</code>의 타입을 갖는 함수로 다시 만들어주었다.</li>\n<li>받아오는 속성들의 <code class=\"language-text\">interface</code>를 미리 구현해주었다.</li>\n<li>\n<p>실행되는 <code class=\"language-text\">dispatcher</code>들은 실행될 때, 제너릭으로 해당 타입을 <code class=\"language-text\">interface</code>로 보내주도록 했다.</p>\n<blockquote>\n<p>처음에는 해당 메소드가 실행될 때, 해당 메소드가 생성되는 상위의 <code class=\"language-text\">HeaderContainer</code>에 제너릭으로 작성해야된다 생각했는데, 아니였다.</p>\n</blockquote>\n<div style=\"text-align : center\">\n<img src=\"/img/2020/12/29/3.PNG?raw=true\" alt=\"3\">\n</div>\n</li>\n</ul>","frontmatter":{"title":"TypeScript로 바꿔보자3","date":"December 29, 2020"}}},"pageContext":{"slug":"/Study/TypeScript/TypeScript_practice02/","previous":{"fields":{"slug":"/Study/TypeScript/TypeScript_practice01/"},"frontmatter":{"title":"TypeScript로 바꿔보자2","category":"Study","draft":false,"tag":"TypeScript"}},"next":{"fields":{"slug":"/Study/TypeScript/TypeScript_practice03/"},"frontmatter":{"title":"TypeScript로 바꿔보자4","category":"Study","draft":false,"tag":"TypeScript"}}}},"staticQueryHashes":["3128451518","3665928227","479399088"]}