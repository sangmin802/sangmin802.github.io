{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/TypeScript/2020-12-23-TypeScript_09_utility/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin Blog","author":"SangMin","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"f8183d55-d5a6-5afc-9b92-ba223199328e","excerpt":"TS 유틸리티 타입 타입스크립트에서 제공하는 여러 전역 유틸리티 타입이 있다. 대체로 타입변수는 , 또 다른 타입변수는 , 속성은 로 한다. 좀더 직관적으로 하기 위해 또 다른 타입변수는 로 카운팅하겠음 Partial TYPE의 모든 속성을 모두 선택적 타입()로 반환 대표타입 : 인터페이스   타입변수 :  Required TYPE의 모든 속성을 필수로 변경한 새로운 타입 반환(선택적타입를 제거) 대표타입 : 인터페이스   타입변수 :  Readonly TYPE…","html":"<h1 id=\"ts-유틸리티-타입\" style=\"position:relative;\"><a href=\"#ts-%EC%9C%A0%ED%8B%B8%EB%A6%AC%ED%8B%B0-%ED%83%80%EC%9E%85\" aria-label=\"ts 유틸리티 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TS 유틸리티 타입</h1>\n<ul>\n<li>\n<p>타입스크립트에서 제공하는 여러 전역 유틸리티 타입이 있다.</p>\n<blockquote>\n<p>대체로 타입변수는 <code class=\"language-text\">T</code>, 또 다른 타입변수는 <code class=\"language-text\">U</code>, 속성은 <code class=\"language-text\">K</code>로 한다.<br>\n좀더 직관적으로 하기 위해 또 다른 타입변수는 <code class=\"language-text\">T2</code>로 카운팅하겠음</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"partial\" style=\"position:relative;\"><a href=\"#partial\" aria-label=\"partial permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Partial</h2>\n<ul>\n<li>\n<p>TYPE의 모든 속성을 모두 선택적 타입(<code class=\"language-text\">?</code>)로 반환</p>\n<ul>\n<li>대표타입 : 인터페이스  </li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> string\n    age <span class=\"token operator\">:</span> number\n  <span class=\"token punctuation\">}</span>\n  ↓ <span class=\"token comment\">// 변환</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PartialUser</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">?</span> <span class=\"token operator\">:</span> string\n    age<span class=\"token operator\">?</span> <span class=\"token operator\">:</span> number\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> userA <span class=\"token operator\">:</span> IUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 'age' 속성이 '{ name: string; }' 형식에 없지만 'IUser' 형식에서 필수입니다.ts(2741)</span>\n    name <span class=\"token operator\">:</span> <span class=\"token string\">'A'</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> userB <span class=\"token operator\">:</span> Partial<span class=\"token operator\">&lt;</span>IUser<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> <span class=\"token string\">'B'</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"required\" style=\"position:relative;\"><a href=\"#required\" aria-label=\"required permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Required</h2>\n<ul>\n<li>\n<p>TYPE의 모든 속성을 필수로 변경한 새로운 타입 반환(선택적타입<code class=\"language-text\">?</code>를 제거)</p>\n<ul>\n<li>대표타입 : 인터페이스  </li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">?</span> <span class=\"token operator\">:</span> string\n    age<span class=\"token operator\">?</span> <span class=\"token operator\">:</span> number\n  <span class=\"token punctuation\">}</span>\n  ↓ <span class=\"token comment\">// 변환</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">RequiredUser</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> string\n    age <span class=\"token operator\">:</span> number\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> userA <span class=\"token operator\">:</span> IUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> <span class=\"token string\">'A'</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> userB <span class=\"token operator\">:</span> Required<span class=\"token operator\">&lt;</span>IUser<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 'age' 속성이 '{ name: string; }' 형식에 없지만 'Required&lt;IUser>' 형식에서 필수입니다.</span>\n    name <span class=\"token operator\">:</span> <span class=\"token string\">'B'</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"readonly\" style=\"position:relative;\"><a href=\"#readonly\" aria-label=\"readonly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Readonly</h2>\n<ul>\n<li>\n<p>TYPE의 모든 속성을 읽기 전용으로 변경한 새로운 타입 반환  </p>\n<ul>\n<li>대표타입 : 인터페이스\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">?</span> <span class=\"token operator\">:</span> string\n    age<span class=\"token operator\">?</span> <span class=\"token operator\">:</span> number\n  <span class=\"token punctuation\">}</span>\n  ↓ <span class=\"token comment\">// 변환</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ReadonlyUser</span> <span class=\"token punctuation\">{</span>\n    readonly name <span class=\"token operator\">:</span> string\n    readonly age <span class=\"token operator\">:</span> number\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> userA <span class=\"token operator\">:</span> IUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span>\n    age <span class=\"token operator\">:</span> <span class=\"token number\">12</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> userB <span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>IUser<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span>\n    age <span class=\"token operator\">:</span> <span class=\"token number\">13</span>\n  <span class=\"token punctuation\">}</span>\n\n  userB<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'C'</span> <span class=\"token comment\">// 읽기 전용 속성이므로 'name'에 할당할 수 없습니다.ts(2540)</span></code></pre></div>\n<h2 id=\"record\" style=\"position:relative;\"><a href=\"#record\" aria-label=\"record permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record</h2>\n<ul>\n<li>\n<p>KEY를 속성으로, TYPE를 그 속성값의 타입으로 지정하는 새로운 타입 반환</p>\n<blockquote>\n<p><code class=\"language-text\">Type Aliases</code>의 타입들을 속성으로 갖는 인터페이스를 만드는데 사용하는듯 함.</p>\n</blockquote>\n<ul>\n<li>대표타입 : 인터페이스\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;K, T&gt;</code></li>\n</ul>\n</li>\n<li>구한 값을 속성으로하는 새로운 인터페이스를 동적으로 생성하는 느낌?</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  type User <span class=\"token operator\">=</span> <span class=\"token string\">'sangmin'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gildong'</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>User<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sangmin <span class=\"token operator\">:</span> <span class=\"token string\">'frontend'</span><span class=\"token punctuation\">,</span>\n    gildong <span class=\"token operator\">:</span> <span class=\"token string\">'backend'</span>\n  <span class=\"token punctuation\">}</span>\n  ↓ <span class=\"token comment\">// 변환</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">RecordUser</span> <span class=\"token punctuation\">{</span>\n    sangmin <span class=\"token operator\">:</span> string\n    gildong <span class=\"token operator\">:</span> string\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"pick\" style=\"position:relative;\"><a href=\"#pick\" aria-label=\"pick permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pick</h2>\n<ul>\n<li>\n<p>TYPE에서 KEY로 속성을 선택한 새로운 타입 반환</p>\n<blockquote>\n<p>Type은 속성을 가지는 인터페이스나 객체여야 함</p>\n</blockquote>\n<ul>\n<li>대표타입 : 인터페이스\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T, K&gt;</code></li>\n</ul>\n</li>\n<li>기존 틀에서, 필요한것만 다시 뽑아서 동적으로 인터페이스를 생성하는 느낌</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n    age <span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\n    email <span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n    isValid <span class=\"token operator\">:</span> boolean\n  <span class=\"token punctuation\">}</span>\n  type TKey <span class=\"token operator\">=</span> <span class=\"token string\">'name'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'age'</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">:</span> Pick<span class=\"token operator\">&lt;</span>IUser<span class=\"token punctuation\">,</span> TKey<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> <span class=\"token string\">'상민'</span><span class=\"token punctuation\">,</span>\n    age <span class=\"token operator\">:</span> <span class=\"token number\">26</span>\n    email <span class=\"token operator\">:</span> <span class=\"token string\">'sangmin802@naver.com'</span> <span class=\"token comment\">// 개체 리터럴은 알려진 속성만 지정할 수 있으며 'Pick&lt;IUser, TKey>' 형식에 'email'이(가) 없습니다.ts(2322)</span>\n  <span class=\"token punctuation\">}</span>\n  ↓ <span class=\"token comment\">// 변환</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickUser</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> string\n    age <span class=\"token operator\">:</span> number\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"omit\" style=\"position:relative;\"><a href=\"#omit\" aria-label=\"omit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Omit</h2>\n<ul>\n<li>\n<p>TYPE에서 KEY로 속성을 생략하고 나머지를 선택한 새로운 타입 반환</p>\n<blockquote>\n<p>Type은 속성을 가지는 인터페이스나 객체여야 함</p>\n</blockquote>\n<ul>\n<li>대표타입 : 인터페이스\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T, K&gt;</code></li>\n</ul>\n</li>\n<li><code class=\"language-text\">Pick</code>과 반대로, 기존의 틀에서 지정한 속성들을 제외한 새로운 인터페이스를 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n    age <span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\n    email <span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n    isValid <span class=\"token operator\">:</span> boolean\n  <span class=\"token punctuation\">}</span>\n  type TKey <span class=\"token operator\">=</span> <span class=\"token string\">'name'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'age'</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">:</span> Omit<span class=\"token operator\">&lt;</span>IUser<span class=\"token punctuation\">,</span> TKey<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    age <span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 개체 리터럴은 알려진 속성만 지정할 수 있으며 'Pick&lt;IUser, \"email\" | \"isValid\">' 형식에 'age'이(가) 없습니다.ts(2322)</span>\n    email <span class=\"token operator\">:</span> <span class=\"token string\">'sangmin802@naver.com'</span><span class=\"token punctuation\">,</span>\n    isValid <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n  ↓ <span class=\"token comment\">// 변환</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">OmitUser</span> <span class=\"token punctuation\">{</span>\n    email <span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n    isValid <span class=\"token operator\">:</span> boolean\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"exclude\" style=\"position:relative;\"><a href=\"#exclude\" aria-label=\"exclude permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exclude</h2>\n<ul>\n<li>\n<p>TYPE1에서 TYPE2를 제외한 새로운 타입 반환</p>\n<ul>\n<li>대표타입 : 유니언\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T1, T2&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  type <span class=\"token constant\">T</span> <span class=\"token operator\">=</span> string <span class=\"token operator\">|</span> number<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">:</span> Exclude<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token punctuation\">,</span>number<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">// 'number' 형식은 'string' 형식에 할당할 수 없습니다.</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">:</span> Exclude<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token punctuation\">,</span>number<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token string\">'문자열'</span>\n  ↓ <span class=\"token comment\">// 변환</span>\n  type ExcludeT <span class=\"token operator\">=</span> string<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"extract\" style=\"position:relative;\"><a href=\"#extract\" aria-label=\"extract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extract</h2>\n<ul>\n<li>\n<p>TYPE1에서 TYPE2를 추출한 새로운 타입 반환</p>\n<blockquote>\n<p>서로 공통적으로 가지고 있는 타입만 반환하는듯 함</p>\n</blockquote>\n<ul>\n<li>대표타입 : 유니언\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T1, T2&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  type <span class=\"token constant\">T</span> <span class=\"token operator\">=</span> string <span class=\"token operator\">|</span> number<span class=\"token punctuation\">;</span>\n  type <span class=\"token constant\">U</span> <span class=\"token operator\">=</span> number <span class=\"token operator\">|</span> boolean<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">:</span> Extract<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token punctuation\">,</span><span class=\"token constant\">U</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token number\">123</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">:</span> Extract<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token punctuation\">,</span><span class=\"token constant\">U</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// 'boolean' 형식은 'number' 형식에 할당할 수 없습니다.ts(2322)</span>\n  <span class=\"token keyword\">const</span> c <span class=\"token operator\">:</span> Extract<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token punctuation\">,</span><span class=\"token constant\">U</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token string\">'문자열'</span> <span class=\"token comment\">// 'string' 형식은 'number' 형식에 할당할 수 없습니다.ts(2322)</span></code></pre></div>\n<h2 id=\"nonnullable\" style=\"position:relative;\"><a href=\"#nonnullable\" aria-label=\"nonnullable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NonNullable</h2>\n<ul>\n<li>\n<p>TYPE에서 null과 undefined를 제외한 새로운 타입 반환</p>\n<ul>\n<li>대표타입 : 유니언\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  type <span class=\"token constant\">T</span> <span class=\"token operator\">=</span> string <span class=\"token operator\">|</span> number <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">:</span> NonNullable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// Type 'null' is not assignable to type 'string | number'.</span>\n  <span class=\"token comment\">// strictNullChecks\": true 사용시 null을 다른타입에서 더이상 인정하지 않아 에러 발생함</span></code></pre></div>\n<h2 id=\"parameters\" style=\"position:relative;\"><a href=\"#parameters\" aria-label=\"parameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parameters</h2>\n<ul>\n<li>\n<p>함수의 매개변수 타입을 새로운 튜플 타입으로 반환</p>\n<ul>\n<li>대표타입 : 함수, 튜플\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a <span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> number<span class=\"token punctuation\">,</span> b <span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>a<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>b<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">:</span> Parameters<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> func<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">:</span> Parameters<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> func<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'문자열'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 'number' 형식은 'boolean' 형식에 할당할 수 없습니다.ts(2322)</span></code></pre></div>\n<h2 id=\"constructorparameters\" style=\"position:relative;\"><a href=\"#constructorparameters\" aria-label=\"constructorparameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConstructorParameters</h2>\n<ul>\n<li>\n<p>클래스 생성자의 매개변수 타입을 새로운 튜플 타입으로 반환</p>\n<ul>\n<li>대표타입 : 클래스, 튜플\t</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">public</span> name <span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">public</span> ace <span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">:</span> ConstructorParameters<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> User<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'상민'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">:</span> ConstructorParameters<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> User<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'상민'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 소스에 1개 요소가 있지만, 대상에 2개가 필요합니다.ts(2322)</span></code></pre></div>\n<h2 id=\"returntype\" style=\"position:relative;\"><a href=\"#returntype\" aria-label=\"returntype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReturnType</h2>\n<ul>\n<li>\n<p>함수의 반환 타입을 새로운 타입으로 변경</p>\n<blockquote>\n<p>반환되는 값의 타입을 다른 함수나 타입을 통해 동적으로 해야 할 때 쓸 듯?</p>\n</blockquote>\n<ul>\n<li>대표타입 : 함수</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a <span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">:</span> ReturnType<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> func<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token string\">'문자열'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">func2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a <span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> ReturnType<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> number<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"instancetype\" style=\"position:relative;\"><a href=\"#instancetype\" aria-label=\"instancetype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>InstanceType</h2>\n<ul>\n<li>\n<p>클래스의 인스턴스 타입을 반환</p>\n<blockquote>\n<p>잘.. 모르겠음</p>\n</blockquote>\n<ul>\n<li>대표타입 : 클래스</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">public</span> name <span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">:</span> InstanceType<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> User<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sangmin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n↓ <span class=\"token comment\">// 변환</span>\n<span class=\"token keyword\">const</span> instanceTypeUser <span class=\"token operator\">:</span> User <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sangmin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"thisparametertype\" style=\"position:relative;\"><a href=\"#thisparametertype\" aria-label=\"thisparametertype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ThisParameterType</h2>\n<ul>\n<li>함수의 명시적 this 매개변수 타입을 새로운 타입으로 반환, 없으면 <code class=\"language-text\">unknown</code>타입 반환</li>\n<li>\n<p><code class=\"language-text\">returnType</code>은 함수의 반환타입을 타입으로 사용한다면, <code class=\"language-text\">ThisParameterType</code>는 함수의 <code class=\"language-text\">this</code>로 명칭된 매개변수의 타입을 가져와서 사용한다.</p>\n<blockquote>\n<p>그로인해 해당 유틸리티의 타겟이 된 함수에 인자를 보내고자할 때에는, <code class=\"language-text\">apply</code>를 사용해야한다.</p>\n</blockquote>\n<ul>\n<li>대표타입 : 함수</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">toHex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">this</span> <span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">numberToString</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n <span class=\"token operator\">:</span> ThisParameterType<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> toHex<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">toHex</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"omitthisparameter\" style=\"position:relative;\"><a href=\"#omitthisparameter\" aria-label=\"omitthisparameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OmitThisParameter</h2>\n<ul>\n<li>\n<p>함수의 명시적 this 매개변수를 제거한 새로운 타입을 반환</p>\n<blockquote>\n<p>용도를 잘 모르겠음…</p>\n</blockquote>\n<ul>\n<li>대표타입 : 함수</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> cat <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  age <span class=\"token operator\">:</span> <span class=\"token number\">12</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> dog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  age <span class=\"token operator\">:</span> <span class=\"token string\">'12'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">this</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> cat</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">getAge</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">)</span>\n<span class=\"token function\">getAge</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Argument of type '{ age: string; }' is not assignable to parameter of type '{ age: number; }'.</span>\n\n<span class=\"token keyword\">const</span> getAgeForDog <span class=\"token operator\">:</span> OmitThisParameter<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> getAge<span class=\"token operator\">></span> <span class=\"token operator\">=</span> getAge<span class=\"token punctuation\">;</span>\n<span class=\"token function\">getAgeForDog</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"thistype\" style=\"position:relative;\"><a href=\"#thistype\" aria-label=\"thistype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ThisType</h2>\n<ul>\n<li>\n<p>TYPE의 this 컨텍스트(Context)를 명시, 별도 반환 없음</p>\n<blockquote>\n<p>타입스크립트버전 apply인가..?</p>\n</blockquote>\n<ul>\n<li>대표타입 : 인터페이스</li>\n<li>타입변수 : <code class=\"language-text\">&lt;T&gt;</code></li>\n</ul>\n</li>\n<li>\n<p>설명</p>\n<ul>\n<li>평소라면, <code class=\"language-text\">user</code>의 인자로 보내지는 <code class=\"language-text\">introduce</code>내부 <code class=\"language-text\">this.name</code>은 에러가 발생함</li>\n<li>하지만, 변수로 받을 때 타입을 <code class=\"language-text\">ThisType&lt;IUser&gt;</code>를 통해서, <code class=\"language-text\">IUser</code>영역을 잡아줌.</li>\n<li>따라서 위의 <code class=\"language-text\">this.name</code>에서 <code class=\"language-text\">this</code>는 <code class=\"language-text\">IUser</code> 인터페이스를 바라보게 됨</li>\n<li>하지만, <code class=\"language-text\">ThisType</code>유틸리티는 아무런 타입도 반환하지 않기 때문에, 해당 함수의 리턴값이 정상적으로 추론되지 않음.</li>\n<li>따라서 <code class=\"language-text\">as IUser</code>와 같은 타입단언으로 리턴값의 타입을 지정해줌</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n  name <span class=\"token operator\">:</span> string\n  <span class=\"token function-variable function\">introduce</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> string\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">makeUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">methods <span class=\"token operator\">:</span> ThisType<span class=\"token operator\">&lt;</span>IUser<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>name <span class=\"token operator\">:</span> <span class=\"token string\">'상민'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>methods<span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> IUser<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">makeUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '상민'</span></code></pre></div>\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<ul>\n<li><a href=\"https://heropy.blog/2020/01/27/typescript/\">HEROPY Teck 한눈에 보는 타입스크립트</a></li>\n</ul>","frontmatter":{"title":"TypeScript Utility","date":"December 23, 2020"}}},"pageContext":{"slug":"/Study/TypeScript/2020-12-23-TypeScript_09_utility/","previous":{"fields":{"slug":"/Study/TypeScript/2020-12-23-TypeScript_08_module/"},"frontmatter":{"title":"TypeScript Module","category":"Study","draft":false}},"next":{"fields":{"slug":"/Study/TypeScript/2020-12-24-TypeScript_practice00/"},"frontmatter":{"title":"TypeScript로 바꿔보자","category":"Study","draft":false}}}},"staticQueryHashes":[]}