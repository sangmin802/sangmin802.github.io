{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/TypeScript/2020-12-21-TypeScript_05_function/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin Blog","author":"SangMin","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"03a0d928-c612-51bc-8807-4cf0f27f763f","excerpt":"함수 오버로드(Overloads) 오버로드는 이름은 같지만 매개변수 타입과 반환 타입이 다른 여러 함수를 가질 수 있는것. 내가 선언한 함수들이 중첩되는느낌? 원하는 만큼의 함수 선언 및 필수적으로 하나의 함수 구현을 가지고 있어야 하며, 함수 구현에서의 타입은 대게 가 사용된다. 인터페이스나 타입별칭에서도 사용할 수 있다. 참조 HEROPY Teck 한눈에 보는 타입스크립트","html":"<h1 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수</h1>\n<h2 id=\"오버로드overloads\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%B2%84%EB%A1%9C%EB%93%9Coverloads\" aria-label=\"오버로드overloads permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오버로드(Overloads)</h2>\n<ul>\n<li>\n<p>오버로드는 이름은 같지만 매개변수 타입과 반환 타입이 다른 여러 함수를 가질 수 있는것.</p>\n<blockquote>\n<p>내가 선언한 함수들이 중첩되는느낌?</p>\n</blockquote>\n</li>\n<li>\n<p>원하는 만큼의 함수 선언 및 필수적으로 하나의 함수 구현을 가지고 있어야 하며, 함수 구현에서의 타입은 대게 <code class=\"language-text\">any</code>가 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a <span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> b <span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 함수 선언</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a <span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> b <span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 함수 선언</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a <span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> b <span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> any <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 함수 구현</span>\n<span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'타입'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'스크립트'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'타입'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 이 호출과 일치하는 오버로드가 없습니다.</span>\n<span class=\"token comment\">// 오버로드 1/2('(a: string, b: string): string')에서 다음 오류가 발생했습니다.</span>\n<span class=\"token comment\">// 오버로드 2/2('(a: number, b: number): number')에서 다음 오류가 발생했습니다.</span></code></pre></div>\n</li>\n<li>\n<p>인터페이스나 타입별칭에서도 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\nname <span class=\"token operator\">:</span> string\nage <span class=\"token operator\">:</span> number\n<span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 함수 선언</span>\n<span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> string <span class=\"token comment\">// 함수 선언</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">:</span> IUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\nname <span class=\"token operator\">:</span> <span class=\"token string\">'sangmin'</span><span class=\"token punctuation\">,</span>\nage <span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">:</span> any<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> any <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 함수 구현</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> data <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> data <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'타입스크립트'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<ul>\n<li><a href=\"https://heropy.blog/2020/01/27/typescript/\">HEROPY Teck 한눈에 보는 타입스크립트</a></li>\n</ul>","frontmatter":{"title":"TypeScript Function","date":"December 21, 2020"}}},"pageContext":{"slug":"/Study/TypeScript/2020-12-21-TypeScript_05_function/","previous":{"fields":{"slug":"/Study/TypeScript/2020-12-21-TypeScript_04_generic/"},"frontmatter":{"title":"TypeScript Generic","category":"Study","draft":false}},"next":{"fields":{"slug":"/Study/TypeScript/2020-12-22-TypeScript_06_class/"},"frontmatter":{"title":"TypeScript Class","category":"Study","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}