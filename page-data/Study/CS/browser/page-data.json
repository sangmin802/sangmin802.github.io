{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/CS/browser/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"sangmin802/sangmin802.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"de28ad9c-51ef-5999-8087-c23a5796b200","excerpt":",  정말 많은 사람들이 url입력창에 다양한 사이트 주소를 입력하고 접속을 한다. 우리가 입력하는것은 한 줄의 영어 주소인데, 어떻게 브라우저는 하나의 웹 사이트를 만들어내는걸까? naver.com -> 10.20.21…","html":"<p><code class=\"language-text\">naver.com</code>, <code class=\"language-text\">youtube.com</code> 정말 많은 사람들이 url입력창에 다양한 사이트 주소를 입력하고 접속을 한다.</p>\n<p>우리가 입력하는것은 한 줄의 영어 주소인데, 어떻게 브라우저는 하나의 웹 사이트를 만들어내는걸까?</p>\n<h2 id=\"navercom---1020215\" style=\"position:relative;\"><a href=\"#navercom---1020215\" aria-label=\"navercom   1020215 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>naver.com -> 10.20.215…</h2>\n<p>사실 우리가 입력하는 <code class=\"language-text\">naver.com</code>이런 도메인 자체로는 아무런 힘을 갖고 있지 않는다.</p>\n<p>웹 어플리케이션들은 본인만의 고유한 <code class=\"language-text\">IP</code>를 갖고있는데, 이 규칙성없는 숫자집합을 우리는 외우기도 힘들고 입력하는데도 불편하니 우리의 입맛에 맞게 새로운 이름을 붙여준것이 <code class=\"language-text\">naver.com</code>이런 것들이다.</p>\n<p>그래서, <code class=\"language-text\">naver.com</code>을 입력했을 때 서버에 이대로 요청을 하는 것이 아닌 도메인 주소와 매칭된 웹 어플리케이션의 <code class=\"language-text\">IP</code>를 연결해주는 누군가의 도움이 필요하다.</p>\n<p>그러한 역할을 해주는것이 <code class=\"language-text\">DNS 서버</code>였다.</p>\n<blockquote>\n<p>저번 DNS와 IP를 비교한 글을 통해 배웠었다.</p>\n</blockquote>\n<p>어쨌든, 매칭된 <code class=\"language-text\">IP</code>주소를 사용하여 해당 <code class=\"language-text\">IP</code>주소를 찾아가게 된다.</p>\n<h2 id=\"필요한-기초자원-수집\" style=\"position:relative;\"><a href=\"#%ED%95%84%EC%9A%94%ED%95%9C-%EA%B8%B0%EC%B4%88%EC%9E%90%EC%9B%90-%EC%88%98%EC%A7%91\" aria-label=\"필요한 기초자원 수집 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필요한 기초자원 수집</h2>\n<p>요청이 잘 전달되었다면, 해당 서버에서는 <code class=\"language-text\">HTML</code>, <code class=\"language-text\">CSS</code>와 같이 웹 어플리케이션을 구성하기위한 기초 자원들을 브라우저에게 전달해준다.</p>\n<h2 id=\"렌더링-엔진의-렌더링-과정\" style=\"position:relative;\"><a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%97%94%EC%A7%84%EC%9D%98-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95\" aria-label=\"렌더링 엔진의 렌더링 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렌더링 엔진의 렌더링 과정</h2>\n<p>자원들이 전달된다면, 브라우저의 렌더링 엔진이 해당 자원들을 화면에 표시하기위한 작업들을 시작하게된다.</p>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/07/26/1.png\" alt=\"1\">\n</div>\n<h3 id=\"html-parsing\" style=\"position:relative;\"><a href=\"#html-parsing\" aria-label=\"html parsing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML parsing</h3>\n<p>처음 서버에서 받아오는 <code class=\"language-text\">HTML</code>은 마크업 언어로서 <code class=\"language-text\">Javascript</code>가 각각의 <code class=\"language-text\">HTML</code>태그에 접근할 수 있도록 <code class=\"language-text\">DOM Tree</code>로 파싱해줄 필요가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello World<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">\"example.jpg\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"example.jpg\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span></code></pre></div>\n<p>위와 같은 마크업을</p>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/07/26/2.png\" alt=\"2\">\n</div>\n<p><code class=\"language-text\">DOM Tree</code>로 파싱을 해주어야 한다.</p>\n<blockquote>\n<p><code class=\"language-text\">DOM</code>이란, <code class=\"language-text\">Document Object Model</code>로 <code class=\"language-text\">HTML</code>마크업 문서를 <code class=\"language-text\">Javascript</code>가 이용할 수 있는 객체로 만든것이다.\n그리고, 각각의 속성(태그, 텍스드 등등)들을 <code class=\"language-text\">node</code>로 하여 상위부터 하위로 뿌리처럼 내려가는 구조를 <code class=\"language-text\">DOM Tree</code>라고 한다.</p>\n</blockquote>\n<p><code class=\"language-text\">HTML</code> 마크업을 <code class=\"language-text\">DOM Tree</code>로 변환하는것이기 때문에, 결과를 보면 <code class=\"language-text\">1:1</code>의 매칭 관계를 맺는다고 한다.</p>\n<h3 id=\"css-parsing\" style=\"position:relative;\"><a href=\"#css-parsing\" aria-label=\"css parsing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS parsing</h3>\n<p><code class=\"language-text\">HTML</code> 마크업을 파싱하면서, <code class=\"language-text\">CSS</code>도 마찬가지로 파싱을 하여 <code class=\"language-text\">CSSOM - CSS Object Model</code>을 구축한다.</p>\n<p><code class=\"language-text\">CSSOM</code>에는 <code class=\"language-text\">HTML</code> 마크업 안에 있는 임베디드 스타일, css파일등 스타일과 관련된 모든 정보들을 포함하고 있다.</p>\n<p>사실 그 외에도, 모든 브라우저들은 <code class=\"language-text\">user agent styles</code>이라고 하는 기본 스타일 집합인 <code class=\"language-text\">computed styles</code>가 존재한다.</p>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/07/26/3.PNG\" alt=\"3\">\n</div>\n<p><code class=\"language-text\">CSSOM</code>은 <code class=\"language-text\">cascading</code>이라는 룰을 갖고 있다.</p>\n<ol>\n<li>\n<p>계단식 스타일</p>\n<blockquote>\n<p>동일한 속성의 스타일이라면 최 하단의 스타일이 적용됨</p>\n</blockquote>\n</li>\n<li><code class=\"language-text\">class</code>, <code class=\"language-text\">id</code>와 같은 선택자에 따라 우선순위가 결정됨</li>\n<li>\n<p>몇몇 속성에 한정된 상속</p>\n<blockquote>\n<p>부모 태그의 속성에 하위 태그도 영향을 받는 경우들</p>\n</blockquote>\n</li>\n</ol>\n<p>이러한 룰을 갖고 스타일을 세분화, 파싱한다.</p>\n<h2 id=\"dom-tree--cssom--render-tree\" style=\"position:relative;\"><a href=\"#dom-tree--cssom--render-tree\" aria-label=\"dom tree  cssom  render tree permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM Tree + CSSOM = Render Tree</h2>\n<p><code class=\"language-text\">body</code>태그를 <code class=\"language-text\">Render Tree</code>의 루트 오브젝트로 생성한다. 이후, 하위는 나머지 <code class=\"language-text\">DOM Node</code>들로 구성을 한다. 이 때의 <code class=\"language-text\">Render Tree</code>는 <code class=\"language-text\">DOM Tree</code>와 1:1 매칭이 아닌 상태이다.</p>\n<p>왜?</p>\n<p><code class=\"language-text\">DOM Tree</code>에 있어도, <code class=\"language-text\">display : none;</code>과 같이 화면에 그려지지 않는 태그의 경우 <code class=\"language-text\">Render Tree</code>에서 제외된다.</p>\n<h3 id=\"layout\" style=\"position:relative;\"><a href=\"#layout\" aria-label=\"layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Layout</h3>\n<p>위에서 하위에 각각의 <code class=\"language-text\">DOM Node</code>로 구성되는 렌더 오브젝트가 추가될 때, 각 <code class=\"language-text\">Node</code>들의 스타일은 이제 알고 있지만, <strong>위치·크기</strong>와 같은 스타일을 계산하여 실제 어떠한 구조를 갖고있는지는 모르는 상태이다.</p>\n<p>뷰포트 내에서 정확한 크기, 위치를 계산해주는 역할을한다.</p>\n<blockquote>\n<p>뷰포트에 변경이 일어난다면, <code class=\"language-text\">Layout</code>도 업데이트되는 것</p>\n</blockquote>\n<p>단 이 시점에서 요소는 벡터단위로만 표시된다.</p>\n<h2 id=\"painting\" style=\"position:relative;\"><a href=\"#painting\" aria-label=\"painting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Painting</h2>\n<p><code class=\"language-text\">Render Tree</code>, <code class=\"language-text\">Layout</code>에서 각 <code class=\"language-text\">Node</code>들의 기하학적인 요소가 계산되어도 최종 화면을 렌더링 하기에는 부족함이 있다.</p>\n<p><code class=\"language-text\">z-index</code>와 같은 속성이 적용되어있다면, <code class=\"language-text\">HTML</code>로 작성된 순서로 만 그리게 되었을 때 원하는 결과값이 다르기 때문이다.</p>\n<blockquote>\n<p>이 떄문에, <code class=\"language-text\">DOM Tree</code>의 노드 순서와 페인트 순서는 다를 수 있다.</p>\n</blockquote>\n<p>따라서, 메인 스레드는 <code class=\"language-text\">Layout</code>에서 형성된 <code class=\"language-text\">Tree</code>를 순회하며 요소들의 속성(배치 방식 등)에 따라 구분지어 계산을 하고 벡터에서 픽셀단위로 변환하여 그린다.</p>\n<blockquote>\n<p>이를 레스터화라고 함</p>\n</blockquote>\n<h2 id=\"최신-브라우저에서-추가된-단계---composition\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%8B%A0-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90%EC%84%9C-%EC%B6%94%EA%B0%80%EB%90%9C-%EB%8B%A8%EA%B3%84---composition\" aria-label=\"최신 브라우저에서 추가된 단계   composition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최신 브라우저에서 추가된 단계 - Composition</h2>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/07/26/4.png\" alt=\"4\">\n</div>\n<p>최신 브라우저에서의 렌더링 단계에 한가지가 추가되었는데, <code class=\"language-text\">Composition</code> 조합 이다.</p>\n<p>위의 <code class=\"language-text\">Painting</code>단계에서, 픽셀단위로 변환하고 바로 그리는것이 아니라 레이어로 관리한다.</p>\n<p>이때, 속성별로 구분지어 레이어를 만드는 이유는, 변경이 필요한 속성을 갖고있는 레이어만 작업을 하여 성능을 높이기위해 브라우저들이 선택한 방식이라고 한다.</p>\n<p>그리고 현재 화면을 렌더링하는데 필요한 레이아웃들만 쌓아서 브라우저위에 그리게 된다.</p>\n<blockquote>\n<p>마치 포토샵의 레이아웃처럼</p>\n</blockquote>\n<h2 id=\"렌더링-성능-개선\" style=\"position:relative;\"><a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%84%B1%EB%8A%A5-%EA%B0%9C%EC%84%A0\" aria-label=\"렌더링 성능 개선 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렌더링 성능 개선</h2>\n<p>렌더링 시간이 길어지게되면, 사용자에게 부적절한 사용경험을 남기게 될 수 있다.</p>\n<p>사용자가 요청을하고 최종 렌더링이 될 때 까지의 시간을 가능한 단축시켜서 빠르게 화면을 접할 수 있도록 하는것이 중요하다.</p>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/07/26/5.png\" alt=\"5\">\n</div>\n<p>이미지를 보면, <code class=\"language-text\">Render Tree</code>를 형성하기까지의 구간을 <code class=\"language-text\">Construction</code>, <code class=\"language-text\">layout</code>단계부터 <code class=\"language-text\">composition</code>까지 <code class=\"language-text\">Operation</code>이라고 구분지어있고 서로 다른 방식으로 최적화를 진행할 수 있다고 한다.</p>\n<h2 id=\"construction\" style=\"position:relative;\"><a href=\"#construction\" aria-label=\"construction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Construction</h2>\n<p>날것의 파일을 브라우저가 이해할 수 있고 사용할수 있는 언어로 바꾸는 작업을 한다.</p>\n<p>사실 이 구간에서는 <strong>불필요한 태그 사용</strong>을 하지 않는것이 최선이라 볼 수 있을것 같다.</p>\n<h2 id=\"operation\" style=\"position:relative;\"><a href=\"#operation\" aria-label=\"operation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Operation</h2>\n<p>변환된 언어를 해석하여 각 <code class=\"language-text\">Node</code>들의 위치, 구조등을 계산하고 형성된 <code class=\"language-text\">layout</code>을 관리하는 구간이다.</p>\n<p><code class=\"language-text\">Construction</code>와 다르게 초기 구조를 수정하는것이 아닌, 사용자의 요청에 의해 발생할 수 있는 애니메이션이나 요소들의 변화와 관련된 항목이다.</p>\n<h3 id=\"reflow\" style=\"position:relative;\"><a href=\"#reflow\" aria-label=\"reflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reflow</h3>\n<p>브라우저가 <code class=\"language-text\">layout</code>, <code class=\"language-text\">paint</code>, <code class=\"language-text\">composition</code> 즉, <code class=\"language-text\">Operation</code>의 모든 단계를 다시 실행하여 위치나 크기 구조등과 같은 값들을 다시 계산하는 상황을 의미한다.</p>\n<blockquote>\n<p><code class=\"language-text\">display</code>, <code class=\"language-text\">animation</code>, <code class=\"language-text\">position</code>, <code class=\"language-text\">width</code> 등등</p>\n</blockquote>\n<h3 id=\"repaint\" style=\"position:relative;\"><a href=\"#repaint\" aria-label=\"repaint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repaint</h3>\n<p><code class=\"language-text\">paint</code>와 <code class=\"language-text\">composition</code> 단계만 재실행 되는 경우를 의미한다.</p>\n<blockquote>\n<p><code class=\"language-text\">background-color</code>, <code class=\"language-text\">box-shadow</code> 등등</p>\n</blockquote>\n<p>브라우저별로 <code class=\"language-text\">css</code> 속성과 관련되어 어느 수준의 단계부터 다시계산되어야 하는지 보여주는 사이트가 있다.</p>\n<ul>\n<li><a href=\"https://csstriggers.com/\">css triggers</a></li>\n</ul>\n<h2 id=\"최선의-방법\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%84%A0%EC%9D%98-%EB%B0%A9%EB%B2%95\" aria-label=\"최선의 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최선의 방법</h2>\n<p><code class=\"language-text\">Reflow</code>, <code class=\"language-text\">Repaint</code>모두 많은 단계를 거쳐야 함에 있어서 그만큼의 비용이 들게된다는 점이다.\n즉, 렌더링시간이 길어지게 된다는 점.</p>\n<p>사용자의 요청을 통한 애니메이션이나 변화에 있어서 최소의 비용으로\n<code class=\"language-text\">composition</code>단계만 거치게 되는 경우는 <code class=\"language-text\">opacity</code>나 <code class=\"language-text\">transform</code>속성을 변경하는것 뿐이라고 한다.</p>\n<h2 id=\"후기\" style=\"position:relative;\"><a href=\"#%ED%9B%84%EA%B8%B0\" aria-label=\"후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>후기</h2>\n<p>브라우저의 렌더링 과정과, 성능개선에 대해 알아보았다.</p>\n<p>그중에서도, 렌더링 최적화에있어서 여러부분에 놀라게되었는데, 현재 사용하고 있는 방식들 중 몇몇부분은 <code class=\"language-text\">operation</code>단계에서 많은 비용이 사용되고 있다는 점 이였다.</p>\n<p>이 문제에 대해서 개선해봐야할 것 같다.</p>\n<blockquote>\n<p>아래 <code class=\"language-text\">LogRocket</code> 블로그에서는 테스트 방법도 나와있으니 해봐야할듯!</p>\n</blockquote>\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<ul>\n<li><a href=\"https://development-crow.tistory.com/5\">까마귀의 생각 창고 - 웹 브라우저 동작원리</a></li>\n<li><a href=\"https://development-crow.tistory.com/5\">개발 전용차선 - 렌더트리</a></li>\n<li><a href=\"https://blog.logrocket.com/eliminate-content-repaints-with-the-new-layers-panel-in-chrome-e2c306d4d752/\">LogRocket - Eliminate content repaints with the new Layers panel in Chrome</a></li>\n</ul>","frontmatter":{"title":"💻 브라우저의 렌더링 과정 및 구간별 성능개선","date":"July 26, 2021"}}},"pageContext":{"slug":"/Study/CS/browser/","previous":{"fields":{"slug":"/Study/CS/prototype/"},"frontmatter":{"title":"🌳 자바스크립트 class의 뿌리 prototype","category":"Study","draft":false,"tag":"CS"}},"next":null}},"staticQueryHashes":["3128451518","3665928227","479399088","479399088"]}