{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/CS/atomic design/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"sangmin802/sangmin802.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"7a1c1da9-0a28-5be2-a348-4d899bcdd555","excerpt":"🙌 Container, Presentational 안녕.. Hook…","html":"<h2 id=\"-container-presentational-안녕-hook-안녕\" style=\"position:relative;\"><a href=\"#-container-presentational-%EC%95%88%EB%85%95-hook-%EC%95%88%EB%85%95\" aria-label=\" container presentational 안녕 hook 안녕 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 Container, Presentational 안녕.. Hook 안녕!</h2>\n<p>이전에는 디렉토리의 구조를 잡을 때, <code class=\"language-text\">Container Component</code>, <code class=\"language-text\">Presentational Component</code>를 통하여 비즈니스로직을 담당하는 컴포넌트와 뷰를 담당하는 컴포넌트를 구분하여 관리하였었다.</p>\n<p>하지만, <code class=\"language-text\">Hook</code>이 개발되고, <code class=\"language-text\">Class</code>기반 컴포넌트가 아닌 <code class=\"language-text\">Function</code>기반의 컴포넌트를 주로 사용하게 되면서 이러한 구조는 더이상 사용하지 않게 되었다.</p>\n<p><code class=\"language-text\">Class</code>가 아니더라도 <code class=\"language-text\">Hook</code>을 통해 쉽게 <code class=\"language-text\">state</code>를 형성하고, 연결할 수 있으며 분리하여 관리하는것 또한 가능해졌기 때문이다.</p>\n<p>이로서 비즈니스 로직과 뷰를 구분할 수 있다는 점은 유지되었다.</p>\n<h2 id=\"🥊-컴포넌트-구조와-고민\" style=\"position:relative;\"><a href=\"#%F0%9F%A5%8A-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B5%AC%EC%A1%B0%EC%99%80-%EA%B3%A0%EB%AF%BC\" aria-label=\"🥊 컴포넌트 구조와 고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥊 컴포넌트 구조와 고민</h2>\n<p><code class=\"language-text\">React</code>와 같은 컴포넌트 기반 프레임워크(라이브러리)의 특징은 잘 설계된 컴포넌트라면 재활용이 용이하다는 점이다. 반복되는 구조나, 스타일을 사용하는 컴포넌트 뿐만 아니라, 다른 프로젝트에서도 충분히 사용할 수 있는 경우가 있다.</p>\n<p>따라서, <code class=\"language-text\">React</code>에서는 컴포넌트 상속보단 <strong>조합</strong>이나 <strong>합성</strong>을 추천하고 있고, 최대한 작은 단위의 컴포넌트를 구성하는것이 좋다고 한다.</p>\n<p>하지만, 컴포넌트를 구성하다보면 재활용성을 위해 어느정도 수준으로 컴포넌트를 잘게 나눠야 하는지 고민을 하는 경우가 많다.</p>\n<blockquote>\n<p>심지어 낱개의 <code class=\"language-text\">div</code> 수준으로도 나눠야 하나 고민한적도 있다.</p>\n</blockquote>\n<p>사실 생각해보면 모든 컴포넌트가 재활용할 수 있다는것은 조금 무리가 있지 않나 생각이 든다. 그러한 점을 막기 위해 최상위 컴포넌트에서 최대한 조합을 사용하게 된다면 부피가 어마어마하게 커져서 처음 코드를 보았을 때 부담스럽지 않을까? 라는 이유 때문</p>\n<p>이를 보았을 때, 작은 단위의 컴포넌트들이 모여 서로 다른 구조를 형성하는 경우, 재활용은 사실상 불가능하지 않을까..?</p>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/05/06/1.png\" alt=\"1\">\n</div>\n<p><code class=\"language-text\">components</code> 디렉토리에 여러가지 컴포넌트들이 저장되어 있지만, 저중에는 재활용성을 고려한 컴포넌트와 그렇지 않고 구조를 잡고있는 컴포넌트가 함께 존재한다.</p>\n<blockquote>\n<p>이러할 때에, 그 둘을 어떻게 구분해주는게 좋을까? 라는 고민도 하게되었다.</p>\n</blockquote>\n<h2 id=\"️-atomic-design\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-atomic-design\" aria-label=\"️ atomic design permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ Atomic design</h2>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/05/06/atomic-design.png\" alt=\"atomic-design\">\n</div>\n<p>기존 프로젝트를 생성하는 방식과는 조금 다르게 <code class=\"language-text\">Atomic pattern</code>은 최 하위 컴포넌트에서 상위컴포넌트로 이동하며 프로젝트를 만든다고 한다.</p>\n<p>총 5가지의 컴포넌트 수준이 존재한다.</p>\n<h3 id=\"-atoms---원자\" style=\"position:relative;\"><a href=\"#-atoms---%EC%9B%90%EC%9E%90\" aria-label=\" atoms   원자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍎 Atoms - 원자</h3>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/05/06/atoms.jpg\" alt=\"atoms\">\n</div>\n<ul>\n<li><code class=\"language-text\">Atomic pattern</code>에서 가장 작은 단위의 컴포넌트이다.</li>\n<li><code class=\"language-text\">img</code>, <code class=\"language-text\">input</code>, <code class=\"language-text\">button</code>, <code class=\"language-text\">label</code>과 같은 <code class=\"language-text\">HTML</code>태그들이 대부분이다.</li>\n<li>어떠한 속성값을 받아오더라도, 컴포넌트가 생성되어야 한다.</li>\n<li><code class=\"language-text\">color</code>, <code class=\"language-text\">font</code>과 같은 스타일은 갖고있을 수 있지만, <code class=\"language-text\">margin</code>, <code class=\"language-text\">position</code>등 구조에 방해가 될 수 있는 위치를 지정하는 스타일은 가질 수 없다.</li>\n<li>자기 자신만으로는 아직 아무것도 할 수 없는 단위이다.</li>\n</ul>\n<h3 id=\"-molecules---분자\" style=\"position:relative;\"><a href=\"#-molecules---%EB%B6%84%EC%9E%90\" aria-label=\" molecules   분자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍊 Molecules - 분자</h3>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/05/06/molecule.jpg\" alt=\"molecule\">\n</div>\n<ul>\n<li>여러개의 원자가 섞여있는 단위이다.</li>\n<li>자기 자신만으로 무언가를 할 수 있게되는 최소단위이다.</li>\n<li>분자만의 속성을 가질 수 있으며, 자신의 원자에 위치값을 지정해줄 수 있다.</li>\n<li>비즈니스 로직이 아닌, 단순 UI를 그리는 로직을 갖고 있을 수 있다.</li>\n</ul>\n<h3 id=\"-organisms---유기체\" style=\"position:relative;\"><a href=\"#-organisms---%EC%9C%A0%EA%B8%B0%EC%B2%B4\" aria-label=\" organisms   유기체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍌 Organisms - 유기체</h3>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/05/06/organism.jpg\" alt=\"organism\">\n</div>\n<ul>\n<li>원자나 분자가 조합된 단위이다.</li>\n<li>어느정도 생성하고자 하는 컴포넌트의 모습을 갖춘 상태이다.</li>\n<li>원자나 분자의 위치값을 조정할 수 있다.</li>\n</ul>\n<h3 id=\"-templates---템플릿\" style=\"position:relative;\"><a href=\"#-templates---%ED%85%9C%ED%94%8C%EB%A6%BF\" aria-label=\" templates   템플릿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍇 Templates - 템플릿</h3>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/05/06/template.jpg\" alt=\"template\">\n</div>\n<ul>\n<li><code class=\"language-text\">page</code>에서 전달받는 유기체 이하의 컴포넌트들이 자리잡게될 구조를 정하는 단위이다.</li>\n<li><code class=\"language-text\">color</code>와 같은 스타일이 아닌, 위치를 지정해주는 구조를 잡아주는 스타일만 존재한다.</li>\n</ul>\n<h3 id=\"-pages---페이지\" style=\"position:relative;\"><a href=\"#-pages---%ED%8E%98%EC%9D%B4%EC%A7%80\" aria-label=\" pages   페이지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍓 Pages - 페이지</h3>\n<div style=\"margin : 0 auto; text-align : center\">\n  <img src=\"/img/2021/05/06/page.jpg\" alt=\"page\">\n</div>\n<ul>\n<li>비즈니스로직이 관리되는 컴포넌트이다.</li>\n<li>구조가 잡힌 템플릿에 유기체 이하의 <code class=\"language-text\">UI</code>를 형성하는 컴포넌트를 부여, 조합·합성 하는 단위이다.</li>\n<li>원자, 분자, 유기체등에서 필요한 상태값(비즈니스로직)들은 모두 해당 단위에서 속성으로 전달된다.</li>\n</ul>\n<h3 id=\"-전반적인-느낌\" style=\"position:relative;\"><a href=\"#-%EC%A0%84%EB%B0%98%EC%A0%81%EC%9D%B8-%EB%8A%90%EB%82%8C\" aria-label=\" 전반적인 느낌 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎓 전반적인 느낌</h3>\n<ul>\n<li>유기체 이하의 컴포넌트에서는 여러 속성을 받을 수 있기 때문에, <code class=\"language-text\">Typescript</code>와 같은 정적 언어로 가능한 속성들만 지정해주는게 좋아보인다.</li>\n<li>\n<p>자기 자신의 구조를 결정하는 스타일은 무조건 상위에서 형성되는 느낌이다.</p>\n<blockquote>\n<p>그외의 색상, 폰트 등의 스타일은 상관없음</p>\n</blockquote>\n</li>\n<li>좀더 상위의 단위로 갈 수록 재사용성은 비교적 떨어지는느낌이다.</li>\n<li>최소단위인 원자가 아닌 경우, <code class=\"language-text\">UI</code>를 위한 로직은 갖고 있을수 있는것 같다.</li>\n<li>템플릿에서는 필요한 속성값을 할당받은 여러 단위의 컴포넌트들을 페이지에게서 받아, 구조에 넣는 역할을 하는것 같다.</li>\n<li><code class=\"language-text\">Naver Line</code>에서 <code class=\"language-text\">Atomic Design</code>을 사용한 컨퍼런스를 영상으로 보았는데, 필요에 따라서는 비슷한 역할을 하는 단위를 합쳐서 사용하기도 하는것 같다.</li>\n</ul>\n<h3 id=\"-자매품-storybook\" style=\"position:relative;\"><a href=\"#-%EC%9E%90%EB%A7%A4%ED%92%88-storybook\" aria-label=\" 자매품 storybook permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📚 자매품 StoryBook</h3>\n<p><code class=\"language-text\">UI</code>를 구성하는 컴포넌트를 좀 더 효율적으로 관리할 수 있도록 도와주는 오픈소스도구라고한다.</p>\n<p>간단하게 사용을 해보았는데, 해당 컴포넌트를 프로젝트에서 실행시키지 않고, 별도의 화면에서 확인할 수 있었다.</p>\n<p>아무래도 최소단위 컴포넌트를 각각 관리하기 때문에, 해당 도구를 같이사용하는경우가 많다고 한다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://ui.toast.com/weekly-pick/ko_20200213\">리액트 어플리케이션 구조 - 아토믹 디자인</a></li>\n<li><a href=\"https://tech.madup.com/atomic-design/\">리액트와 아토믹 디자인 패턴</a></li>\n<li><a href=\"https://bradfrost.com/blog/post/atomic-web-design/#atoms\">bradfrost-Atomic Design</a></li>\n<li><a href=\"https://zoomkoding.github.io/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4/%EC%9A%B0%EC%95%84%ED%95%9C%ED%85%8C%ED%81%AC%EC%BA%A0%ED%94%84/2020/07/09/atomic-design-pattern.html\">(우아한테크캠프 3기) Atomic Design Pattern이 뭐지?</a></li>\n<li><a href=\"https://medium.com/@inthewalter/atomic-design-for-react-514660f93ba\">아토믹디자인 for React</a></li>\n<li><a href=\"https://storybook.js.org/\">StoryBook</a></li>\n</ul>","frontmatter":{"title":"Atomic Design","date":"May 06, 2021"}}},"pageContext":{"slug":"/Study/CS/atomic design/","previous":{"fields":{"slug":"/Study/CS/var vs let tdz/"},"frontmatter":{"title":"var vs let의 차이와 기준이 되는 TDZ","category":"Study","draft":false,"tag":"CS"}},"next":null}},"staticQueryHashes":["3128451518","3665928227","479399088","479399088"]}