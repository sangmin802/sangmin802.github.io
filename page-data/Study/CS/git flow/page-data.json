{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/CS/git flow/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://sangmin802.github.io","comment":{"disqusShortName":"","utterances":"sangmin802/sangmin802.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"5b592f8f-bf17-50d2-a76d-4a2cca2e21e8","excerpt":"…","html":"<p>프로젝트는 첫 제작이 완료되었을 때 종료되는것이 아니라, 새로운 시작이라고 보는것이 맞는것 같다.</p>\n<p>새로운 기능이 추가되고, 버그를 수정하고, 성능향상을 위해 보수작업을 하는점에서 말이다.</p>\n<p>하나의 프로젝트에 여러 사람이 함께 작업을 하다보면 각각의 생각과 습관 스타일들이 코드에 묻어나게 되는데 그러한 차이를 나쁘다고 하는것이 아니라 하나의 공통된 규칙을 갖고, 코드를 리뷰해볼 필요도 있다.</p>\n<p>여러 변경사항을 하나의 프로젝트에 병합하고, 이전 코드들에 대한 기록을 남기는 등 개발 환경에 있어 협업을 위해 큰 도움을 주는것이 로컬 저장소의 <code class=\"language-text\">Git</code> 원격 저장소인 <code class=\"language-text\">Github</code>이다.</p>\n<h2 id=\"git-flow\" style=\"position:relative;\"><a href=\"#git-flow\" aria-label=\"git flow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git flow</h2>\n<p>깃 플로우를 검색하면 가장 많이 나오는 그림이 있다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/1.png?raw=true\" alt=\"1\">\n</div>\n<p>처음에 그림을 보았을 때에는 무엇을 의미하는지 이해가 되지 않았지만, 실제로 적용해보니 어느정도 감이 잡히는것 같았다.</p>\n<h3 id=\"master\" style=\"position:relative;\"><a href=\"#master\" aria-label=\"master permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>master</h3>\n<p>실제로 배포되고 있는 소스가 저장되어있는 브랜치 이다.</p>\n<h3 id=\"develop\" style=\"position:relative;\"><a href=\"#develop\" aria-label=\"develop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>develop</h3>\n<p>실제로 배포되고 있는 소스가 아닌, 새로운 기능들이 추가되고있는 브랜치이다.</p>\n<blockquote>\n<p>불완전하지만, 가장 최신의 소스라고 보는것이 맞는것 같다.</p>\n</blockquote>\n<h3 id=\"feature\" style=\"position:relative;\"><a href=\"#feature\" aria-label=\"feature permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>feature</h3>\n<p><code class=\"language-text\">develop</code>브랜치가 새로운 기능들이 추가되고있는 하나의 굵은 소스라고 보았을 때, 그 새로운 기능들이 실제로 생성 되는 브랜치라고 보면 될 것 같다.</p>\n<blockquote>\n<p>로그인기능 개발, 팝업기능 개발 등등</p>\n</blockquote>\n<h3 id=\"hotifx\" style=\"position:relative;\"><a href=\"#hotifx\" aria-label=\"hotifx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>hotifx</h3>\n<p>배포가 되고 있는 <code class=\"language-text\">master</code> 브랜치의 소스에서 긴급한 버그가 발생하였을 때, 급하게 수정을 하여 반영하는 브랜치 라고 한다.</p>\n<p>생각해보면, 갑자기 발생한 에러를 <code class=\"language-text\">develop</code>에서 반영한다고 하면, 다음 업데이트가 있을 때 까지 버그가 수정되지 못할 뿐더러, 바로 수정하더라도 작업중인 기능들이 완성되지 못한 채로 남을 수 있기 때문인것 같다.</p>\n<h3 id=\"release\" style=\"position:relative;\"><a href=\"#release\" aria-label=\"release permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>release</h3>\n<p><code class=\"language-text\">develop</code>브랜치로 새롭게 업데이트 되는 소스들이 모두 정리된다면, 테스트 등을 진행하는 브랜치라고 한다.</p>\n<h2 id=\"과정대로-진행해보기\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EC%A0%95%EB%8C%80%EB%A1%9C-%EC%A7%84%ED%96%89%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"과정대로 진행해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과정대로 진행해보기</h2>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/2.PNG?raw=true\" alt=\"2\">\n</div>\n<p>글로 기록하기 전, 실제로 반영을 해본 결과물이다. 간단한 수정을 통해 과정을 다뤄보도록 하자.</p>\n<p>명령어 위주가 아닌 과정을 중점으로 알아보기위해 소스트리를 사용하였다.</p>\n<h3 id=\"master-develop-따오기\" style=\"position:relative;\"><a href=\"#master-develop-%EB%94%B0%EC%98%A4%EA%B8%B0\" aria-label=\"master develop 따오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>master, develop 따오기</h3>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/3.PNG?raw=true\" alt=\"3\">\n</div>\n<p>만약, 개인 프로젝트라면 개인 프로젝트를 연결해주고, 이미 생성되어있는 프로젝트가 있다면, <code class=\"language-text\">fork</code>, <code class=\"language-text\">clone</code>의 과정을 거쳐서 가져오도록 한다.</p>\n<blockquote>\n<p>이미 진행중인 프로젝트라면 이 첫 과정이 진행된 상태일 수 도 있다.</p>\n</blockquote>\n<p>진행중인 프로젝트가 아니라면 처음에는 <code class=\"language-text\">master</code> 브랜치만 존재하는 상태일 것이다.</p>\n<p>소스트리의 우측 상단에 있는 깃 플로우를 눌러서 기본 브랜치들을 생성해주도록 하자.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/4.PNG?raw=true\" alt=\"4\">\n</div>\n<p>앞으로 생성되는 브랜치들의 기본 접두어를 설정해줄 수 있다.</p>\n<p>딱히 뭘 수정할 필요 없이 확인을 눌러주자.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/5.PNG?raw=true\" alt=\"5\">\n</div>\n<p><code class=\"language-text\">master</code>, <code class=\"language-text\">develop</code> 브랜치가 생성됨을 확인해 볼 수 있다.\n이때, <code class=\"language-text\">master</code>는 원격과 로컬 둘 다 존재하는 상태이지만, <code class=\"language-text\">develop</code>은 로컬에만 생성된 것이니 <code class=\"language-text\">push</code>를 통해 나의 원격에도 브랜치를 생성해주도록 하자.</p>\n<h3 id=\"기능-추가를-위한-feature\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80%EB%A5%BC-%EC%9C%84%ED%95%9C-feature\" aria-label=\"기능 추가를 위한 feature permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능 추가를 위한 feature</h3>\n<p>현재 배포되고 있는 소스인 <code class=\"language-text\">matser</code>와 개발이 이뤄지고 있는 <code class=\"language-text\">develop</code>브랜치를 모두 로컬에서 확인할 수 있게 되었다.</p>\n<p>앞으로 우리는 <code class=\"language-text\">develop</code>브랜치에서 필요한 기능들을 추가적으로 개발을 하기 위해 <code class=\"language-text\">feature</code> 브랜치를 생성해야 한다.</p>\n<p>아까와 마찬가지로 우측 상단의 <code class=\"language-text\">깃 플로우</code> 버튼을 누르면 이번에는 예상된는 동작을 제시해주는 팝업이 활성화 된다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/6.PNG?raw=true\" alt=\"6\">\n</div>\n<p>새로운 기능을 추가하기 위함이기 때문에, <code class=\"language-text\">새 기능 시작</code>을 눌러주고 적합한 기능명을 작명해주도록 하자.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/7.PNG?raw=true\" alt=\"7\">\n</div>\n<p>확인을 누르면 <code class=\"language-text\">feature</code>브랜치에 작명한 세부 브랜치가 생성된것을 볼 수 있다.</p>\n<blockquote>\n<p><code class=\"language-text\">feature</code>브랜치는 여러 개발자가 함께 비슷한 기능을 개발하기 위해 원격에 생성되어있을 수 도 있고, 로컬에만 생성될 수 도 있다고 한다.</p>\n</blockquote>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/8.PNG?raw=true\" alt=\"8\">\n</div>\n<p>새로운 기능을 위한 소스코드를 작성하고, 필요아 따라 구분지어 해당 로컬 브랜치에 커밋을 할 것이다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/9.PNG?raw=true\" alt=\"9\">\n</div>\n<p>새로운 기능 추가 및 커밋까지 완료가 되었다면 해당 브랜치는 역할을 마무리하였기 때문에 아까의 <code class=\"language-text\">깃 플로우</code> 버튼을 눌러 기능 마무리를 시켜주도록 하자.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/10.PNG?raw=true\" alt=\"10\">\n</div>\n<h3 id=\"develop-병합\" style=\"position:relative;\"><a href=\"#develop-%EB%B3%91%ED%95%A9\" aria-label=\"develop 병합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>develop 병합</h3>\n<p>로컬 <code class=\"language-text\">develop</code>과 <code class=\"language-text\">feature</code>을 병합해주기 전, 나보다 먼저 작업이 완료된 다른 개발자들의 변경사항이 반영된 원격 <code class=\"language-text\">develop</code>에 반영되었을 수 있기 때문에, <code class=\"language-text\">pull</code>을 사용하여 로컬 <code class=\"language-text\">develop</code>을 최신화 시켜주고 병합 하도록 하자.</p>\n<p>위에서 마무리를 시켜주게 될 경우, 로컬의 <code class=\"language-text\">develop</code>에 <code class=\"language-text\">feature</code> 브랜치의 작업내용들이 병합되고, 해당 브렌치는 자동으로 제거가 된다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/11.PNG?raw=true\" alt=\"11\">\n</div>\n<p>아직 로컬의 <code class=\"language-text\">develop</code>에만 병합이 이루어졌기 때문에, 나의 원격에있는 <code class=\"language-text\">develop</code>에도 병합된 커밋들을 반영시켜줄 필요가 있다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/12.PNG?raw=true\" alt=\"12\">\n</div>\n<p>나의 원격 <code class=\"language-text\">develop</code>에 변경사항을 <code class=\"language-text\">push</code>해준다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/13.PNG?raw=true\" alt=\"13\">\n</div>\n<h3 id=\"pull-request-작성\" style=\"position:relative;\"><a href=\"#pull-request-%EC%9E%91%EC%84%B1\" aria-label=\"pull request 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pull request 작성</h3>\n<p>나의 원격 <code class=\"language-text\">develop</code> 브랜치에는 로컬에서 작업한 새로운 기능들이 추가된 상태이다.</p>\n<p>따라서 아래와 같이 변경사항에 대해 <code class=\"language-text\">pull request</code>를 작성할 수 있는 알림이 뜰 것이다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/14.PNG?raw=true\" alt=\"14\">\n</div>\n<p>개발한 기능에 대해 간략하게 설명하는 글들을 작성하고 <code class=\"language-text\">request</code>를 보내도록 한다.</p>\n<blockquote>\n<p>현재는 개인 프로젝트라서 바로 나의 원격 <code class=\"language-text\">master</code> 브랜치에 보내도록 하였다.</p>\n</blockquote>\n<blockquote>\n<p>아마, 협업을 하여 <code class=\"language-text\">clone</code>해온 상태라면 나의 원격 <code class=\"language-text\">develop</code>에서 원본 원격 <code class=\"language-text\">develop</code>으로 요청을 보내는 형태일 것이다.</p>\n</blockquote>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/15.PNG?raw=true\" alt=\"15\">\n</div>\n<p>요청한 <code class=\"language-text\">request</code>는 아래와 같이 확인을 할 수 있고, 적절한 코드리뷰등을 통해 최종 승인권한자가 <code class=\"language-text\">pull request</code>를 승힌하게 될 것이다.</p>\n<div style=\"text-align : center\">\n  <img src=\"/img/2021/08/30/14.PNG?raw=true\" alt=\"14\">\n</div>\n<p>최종적으로 승인이 된 <code class=\"language-text\">request</code>를 확인할 수 있다.</p>\n<h3 id=\"로컬-최신화\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC-%EC%B5%9C%EC%8B%A0%ED%99%94\" aria-label=\"로컬 최신화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬 최신화</h3>\n<p>만약 <code class=\"language-text\">fork</code>를 통해 루트 프로젝트를 가져와서 개발을 하는 상황일 경우, 내 로컬의 개발 환경을 최신상태로 유지할 필요가 있다.</p>\n<blockquote>\n<p>작업을 완료 하고, 나의 <code class=\"language-text\">origin</code>으로 <code class=\"language-text\">push</code>하기 전</p>\n</blockquote>\n<p>이런 상황의 루트 프로젝트를 <code class=\"language-text\">upstream</code>이라고 부르며 해당 저장소를 원격 저장소에 추가를 해줄 필요가 있다.</p>\n<ol>\n<li>\n<p>저장소 - 원격저장소에 경로 추가</p>\n<ul>\n<li>대부분 이름을 <code class=\"language-text\">upstream</code>이라고 한다 함</li>\n</ul>\n</li>\n<li>\n<p>좌측 원격탭의 <code class=\"language-text\">upstream</code>에서 가져오기 진행</p>\n<ul>\n<li><code class=\"language-text\">upstream repository</code>에 생성되어있는 브랜치들도 하위에 모두 표시되니, 현재 브랜치에 맞는 <code class=\"language-text\">upstream</code> 브랜치에서 <code class=\"language-text\">pull</code> 해야함</li>\n<li>개인 프로젝트라면 프로젝트에서 최신 개발환경을 갖고있는 브랜치</li>\n</ul>\n</li>\n<li>\n<p>만약, <code class=\"language-text\">upstream</code>에서 가져오려는 중, 작업해놓은 코드들이 커밋 대기중인 상태라면 작업해놓은 코드들을 <code class=\"language-text\">stash</code>에 저장해놓은 다음 <code class=\"language-text\">upstream</code>에서 <code class=\"language-text\">pull</code>한다.</p>\n<ul>\n<li>커밋을 해도 무방한것 같음. 단 <code class=\"language-text\">push</code>는 절대 ㄴㄴ</li>\n<li>이전 커밋과, <code class=\"language-text\">pull</code>하여 추가될 커밋중 충돌되는 부분이 있다면 해결이 필요한 부분이라고 보여줌</li>\n</ul>\n</li>\n<li>\n<p>이후 <code class=\"language-text\">stash</code>에 저장해놓은 코드를 다시 현재 브랜치로 가져오고, 충돌 파일은 직접 합치기</p>\n<ul>\n<li><code class=\"language-text\">stash</code>에 저장을 하고 최신 개발 환경을 <code class=\"language-text\">pull</code>하던, 커밋을 먼저 하고 <code class=\"language-text\">pull</code>하던 상관없지만, <code class=\"language-text\">origin</code>에 <code class=\"language-text\">push</code>하기 전에 최신 개발 환경을 <code class=\"language-text\">pull</code>하는것이 정말 중요한듯.</li>\n<li>동일 파일 내 변경사항이 있거나, <code class=\"language-text\">pull</code>한 브랜치에서 업데이트된 내용이 있다면 충돌이 발생할 텐데(대부분 생기는 듯), 잘 병합해주면 큰 문제 없음</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">origin</code>으로 업데이트 한 <code class=\"language-text\">branch</code>를 <code class=\"language-text\">push</code>한다음, 최종적으로 병합되어야 할 브랜치에 <code class=\"language-text\">pull request</code>를 생성하여 전달함.</p>\n<ul>\n<li><code class=\"language-text\">pull request</code>를 생성할 때, <code class=\"language-text\">upstream</code>의 브랜치, 자신의 브랜치 등 모든 브랜치를 선택할 수 있음</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"아쉬웠던-점\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%89%AC%EC%9B%A0%EB%8D%98-%EC%A0%90\" aria-label=\"아쉬웠던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아쉬웠던 점</h2>\n<p>개인 프로젝트를 가지고 진행하였기 때문에 중간중간 정확하지 않은 부분이 있을 수 있다.</p>\n<blockquote>\n<p>특히 <code class=\"language-text\">pull request</code> 단계의 경우, 외부 블로그의 글이나 다른 방식으로 테스트해본걸 기반으로 작성되었다.</p>\n</blockquote>\n<p>이러한 과정을 통해 최대한 원본의 소스코드에 직접적인 수정이 바로바로 이뤄지는것을 막아서 최대한 안전하게 작업을 진행하고자 하는 느낌이 들었다.</p>\n<p>또한, 최종 소스코드에 병합하기 전 기존의 규척이나, 적합하지 않은 방식으로 생성된 코드를 리뷰하여 사전에 수정과정을 거칠수 있다는 점 또한 큰 이점인것 같다.</p>\n<p>완벽히 동일한 환경에서 해보지 못한점은 아쉽지만, 흐름에 대한 이해에는 큰 도움이 된 것 같다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://jeong-pro.tistory.com/196\">git flow 적응기</a></li>\n<li><a href=\"https://techblog.woowahan.com/2553/\">우아한 형제들 git flow</a></li>\n</ul>","frontmatter":{"title":"🌿git flow 브랜치 전략을 사용하여 안전하게 프로젝트 관리해보기","date":"August 30, 2021"}}},"pageContext":{"slug":"/Study/CS/git flow/","previous":{"fields":{"slug":"/Study/Think/user experience/"},"frontmatter":{"title":"⚛ 비동기 작업 분리를 통한 사용자 경험 향상 및 Suspense에 대한 고민","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/Think/memohooks/"},"frontmatter":{"title":"⚛ 메모이제이션 hooks의 오용","category":"Study","draft":false,"tag":"Think"}}}},"staticQueryHashes":["3128451518","3665928227","479399088","479399088"]}