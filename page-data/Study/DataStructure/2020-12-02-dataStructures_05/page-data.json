{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/DataStructure/2020-12-02-dataStructures_05/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"159d20a5-4462-56dd-9b4e-a1aa3093a124","excerpt":"Graphs 그래프 각 노드들이 서로 연결되어있는 자료 구조형으로, 아주 커다란 자료 구조형의 범위 중 하나라고 한다. 실제로, 자료구조가 포함되어있고, 그 안에는 가 포함되어있다고 함.. 상하위 개념이 없이 노드들간의 간선을 하나로 모아놓은 자료구조라고 한다. 구현방식 인접리스트 : 노드를 키로 사용하여 해당 노드의 이웃들을 리스트에 저장한다. 인접행렬 : 행렬의 각 항목이 두 노드간에 연결얼 나타내는 행렬이다. 용어 Vertex…","html":"<h1 id=\"graphs-그래프\" style=\"position:relative;\"><a href=\"#graphs-%EA%B7%B8%EB%9E%98%ED%94%84\" aria-label=\"graphs 그래프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Graphs 그래프</h1>\n<div style=\"display : flex; justify-content : space-between;\">\n  <img style=\"display : inlneblock; width : 100%\" src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fpuzc4%2FbtqzrWYUh0F%2F9OGKTFwewWdUivuDupPKM0%2Fimg.gif\" alt=\"result1\">\n</div>\n<ul>\n<li>\n<p>각 노드들이 서로 연결되어있는 자료 구조형으로, 아주 커다란 자료 구조형의 범위 중 하나라고 한다.</p>\n<blockquote>\n<p>실제로, <code class=\"language-text\">Trees</code>자료구조가 포함되어있고, 그 안에는 <code class=\"language-text\">Linked List</code>가 포함되어있다고 함..</p>\n</blockquote>\n</li>\n<li>상하위 개념이 없이 노드들간의 간선을 하나로 모아놓은 자료구조라고 한다.</li>\n</ul>\n<h2 id=\"구현방식\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84%EB%B0%A9%EC%8B%9D\" aria-label=\"구현방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현방식</h2>\n<ul>\n<li>\n<p>인접리스트 : 노드를 키로 사용하여 해당 노드의 이웃들을 리스트에 저장한다.</p>\n<div style=\"margin : 0 auto; text-align : center\">\n<img src=\"/img/2020/12/02/graph2.PNG?raw=true\" alt=\"graph\">\n</div>\n</li>\n<li>\n<p>인접행렬 : 행렬의 각 항목이 두 노드간에 연결얼 나타내는 행렬이다.</p>\n<div style=\"margin : 0 auto; text-align : center\">\n<img src=\"/img/2020/12/02/graph1.PNG?raw=true\" alt=\"graph\">\n</div>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Graph</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vertexes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vertex</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vertexes<span class=\"token punctuation\">[</span>vertex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>value <span class=\"token operator\">:</span> vertex<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vertex1<span class=\"token punctuation\">,</span> vertex2<span class=\"token punctuation\">,</span> weight</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vertexes<span class=\"token punctuation\">[</span>vertex1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>vertex2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vertexes<span class=\"token punctuation\">[</span>vertex2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>vertex1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Graph</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'일산서구'</span><span class=\"token punctuation\">)</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'일산동구'</span><span class=\"token punctuation\">)</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'덕양구'</span><span class=\"token punctuation\">)</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span><span class=\"token string\">'일산서구'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'일산동구'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span><span class=\"token string\">'일산서구'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'덕양구'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span><span class=\"token string\">'일산동구'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'덕양구'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"용어\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4\" aria-label=\"용어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어</h2>\n<ul>\n<li>Vertex : 그래프에서는 노드를 벌텍스라고함</li>\n<li>간선(엣지) : 노드들을 연결하는 선</li>\n<li>차수 : 하나의 노드에 닿는 간선의 수</li>\n<li>인접 : 간선을 한번만 통해 갈 수 있는 경우</li>\n<li>무방향 그래프(쌍방향) : 페이스북과 같이, 친구를 맺으면 상호 친구가 됨</li>\n<li>단방향 그래프 : 인스타는 다른사용자를 팔로우 한다고 해서 서로 상호팔로우 되지는 않음</li>\n<li>\n<p>가중치 : 간선의 길이? 즉, A노드에서 B노드까지의 거리</p>\n<blockquote>\n<p>ex) A지역에서 B지역까지의 거리</p>\n</blockquote>\n</li>\n</ul>","frontmatter":{"title":"자료구조 Data Structures Graphs","date":"December 02, 2020"}}},"pageContext":{"slug":"/Study/DataStructure/2020-12-02-dataStructures_05/","previous":{"fields":{"slug":"/Study/Think/2020-11-30-refactoring/"},"frontmatter":{"title":"리팩토링과 클린코드","category":"Study","draft":false,"tag":"Think"}},"next":{"fields":{"slug":"/Study/DataStructure/2020-12-04-dataStructures_06/"},"frontmatter":{"title":"자료구조 Data Structures Tree","category":"Study","draft":false,"tag":"Data Structures"}}}},"staticQueryHashes":["3128451518","3665928227"]}