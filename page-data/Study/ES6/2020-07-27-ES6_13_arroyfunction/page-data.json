{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/ES6/2020-07-27-ES6_13_arroyfunction/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin Blog","author":"SangMin","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"0660fe01-51b3-54d0-98ac-257147f847fc","excerpt":"Arroy function(화살표함수) 콜백함수나, 몇몇의 함수를 입력할 때 function을 다시쓰는것은 너무나도 귀찮다. 따라서, 이런 경우 로 축약할수 있게 되었다. 화살표함수의 this 기본적으로 객체 내에서는 메소드를 정의하게될 경우, 해당 메소드의 는 객체를 지칭한다. 하지만\n메소드를 화살표함수로 정의한다면, 는 객체가 아닌 를 지칭하게된다. 콜백함수로 일반함수를 사용했을 때, 객체 내부더라도 window…","html":"<h2 id=\"arroy-function화살표함수\" style=\"position:relative;\"><a href=\"#arroy-function%ED%99%94%EC%82%B4%ED%91%9C%ED%95%A8%EC%88%98\" aria-label=\"arroy function화살표함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arroy function(화살표함수)</h2>\n<ul>\n<li>콜백함수나, 몇몇의 함수를 입력할 때 function을 다시쓰는것은 너무나도 귀찮다. 따라서, 이런 경우 <code class=\"language-text\">() =&gt;</code>로 축약할수 있게 되었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 구버전</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fuckyou'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 화살표함수</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fuckyou'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> newArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> object</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> res<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">// [2,4,6,8,10]</span></code></pre></div>\n<h2 id=\"화살표함수의-this\" style=\"position:relative;\"><a href=\"#%ED%99%94%EC%82%B4%ED%91%9C%ED%95%A8%EC%88%98%EC%9D%98-this\" aria-label=\"화살표함수의 this permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화살표함수의 this</h2>\n<ol>\n<li>기본적으로 객체 내에서는 메소드를 정의하게될 경우, 해당 메소드의 <code class=\"language-text\">this</code>는 객체를 지칭한다. <b style=\"color : tomato; font-\">하지만</b>\n메소드를 화살표함수로 정의한다면, <code class=\"language-text\">this</code>는 객체가 아닌 <code class=\"language-text\">window</code>를 지칭하게된다.</li>\n<li>\n<p>콜백함수로 일반함수를 사용했을 때, 객체 내부더라도 window를 지칭한다. 이럴경우, 이전까지는 <code class=\"language-text\">.bind(this)</code>를 통해 해결해왔지만, 화살표함수로 해결 가능해졌다.</p>\n<blockquote>\n<p>실제로, React에서 컴포넌트 내부의 메소드를 호출하려 할 때, <code class=\"language-text\">this.method</code>처럼 직접연결할 경우, 뒤에 <code class=\"language-text\">.bind(this)</code>를 써줬어야 했는데, 직접연결이 아닌 <code class=\"language-text\">() =&gt; {this.method}</code>는 써줄 필요가 없었다.</p>\n</blockquote>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name <span class=\"token operator\">:</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">arrowThis</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 객체 내 화살표함수</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">normalThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 객체 내 일반메소드</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// myObj</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">arrowCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 객체 내 화살표 콜백함수</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// myObj</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">normalCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 객체 내 일반 콜백함수</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nmyObj<span class=\"token punctuation\">.</span><span class=\"token function\">arrowThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyObj<span class=\"token punctuation\">.</span><span class=\"token function\">normalThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyObj<span class=\"token punctuation\">.</span><span class=\"token function\">arrowCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyObj<span class=\"token punctuation\">.</span><span class=\"token function\">normalCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"🧐결론\" style=\"position:relative;\"><a href=\"#%F0%9F%A7%90%EA%B2%B0%EB%A1%A0\" aria-label=\"🧐결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧐결론</h2>\n<ul>\n<li>화살표함수는 편리하지만, 사용할 때 this가 지칭하는것이 바뀔 수 있다는점을 알고 사용해야겠다.</li>\n</ul>","frontmatter":{"title":"ES6_Arrow function(화살표함수)","date":"July 27, 2020"}}},"pageContext":{"slug":"/Study/ES6/2020-07-27-ES6_13_arroyfunction/","previous":{"fields":{"slug":"/Study/ES6/2020-07-27-ES6_12_template/"},"frontmatter":{"title":"ES6_template처리","category":"Study","draft":false}},"next":{"fields":{"slug":"/Study/ES6/2020-07-28-ES6_14_default params/"},"frontmatter":{"title":"ES6_Default Parameters","category":"Study","draft":false}}}},"staticQueryHashes":[]}