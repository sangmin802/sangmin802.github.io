{"componentChunkName":"component---src-templates-blog-post-js","path":"/Study/ES6/2020-07-31-ES6_19_proxy/","result":{"data":{"site":{"siteMetadata":{"title":"SangMin 개발 이야기","author":"SangMin","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"ee65600d-d647-5b94-b07a-02e5d0be11de","excerpt":"Proxy 특정 Object를 갖고와서 다른 용도로 사용할 수 있게 하는것 첫번째 인자로 대상이 될 객체를 넣고, 두번째 인자로 중간단계의 메소드를 갖고있는 객체를 지정한다. 대표 메소드는 ,  이다","html":"<h2 id=\"proxy\" style=\"position:relative;\"><a href=\"#proxy\" aria-label=\"proxy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proxy</h2>\n<ul>\n<li>특정 Object를 갖고와서 다른 용도로 사용할 수 있게 하는것</li>\n<li>첫번째 인자로 대상이 될 객체를 넣고, 두번째 인자로 중간단계의 메소드를 갖고있는 객체를 지정한다.</li>\n<li>대표 메소드는 <code class=\"language-text\">get</code>, <code class=\"language-text\">set</code> 이다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name <span class=\"token operator\">:</span> <span class=\"token string\">'이름이야'</span><span class=\"token punctuation\">,</span>\n      changedCount <span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">get</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">,</span> receiver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// target = 타겟이 된 객체</span>\n        <span class=\"token comment\">// property = 명령을 받은 속성</span>\n        <span class=\"token comment\">// receiver = 생성된 proxy객체</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Get value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1번</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2번</span>\n        <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> target<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Doesn't exist\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">set</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// value = 변경되기로 요청한 값</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Changing name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1번</span>\n        target<span class=\"token punctuation\">[</span><span class=\"token string\">'changedCount'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        target<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 생성된 proxy객체를 조회하게될 경우, get메소드가 먼저 실행된다.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 1번 Get value</span>\n    <span class=\"token comment\">// 2번 ({name: \"이름이야\", changedCount: 0}, 'name', Proxy {name: \"이름이야\", changedCount: 0})</span>\n    <span class=\"token comment\">// 3번 이름이야</span>\n\n    <span class=\"token comment\">// proxy의 name속성을 변경하게되면, 바뀌기전 set 메소드가 먼저 실행된다.</span>\n    proxy<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Name changed'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 1번 Changing name</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 1번 Get value</span>\n    <span class=\"token comment\">// 2번 ({name: \"Name changed\", changedCount: 0}, 'name', Proxy {name: \"Name changed\", changedCount: 0})</span>\n    <span class=\"token comment\">// 3번 Name changed</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">.</span>whi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Doesn't exist</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Proxy {name: \"Name changed\", changedCount: 1}</span>\n\n    <span class=\"token comment\">// 위에서는 예시로, 변경이 이뤄질때마다 count++되도록해서 몇번바꿨는지 출력할 수 있도록 함</span></code></pre></div>","frontmatter":{"title":"ES6_Proxy","date":"July 31, 2020"}}},"pageContext":{"slug":"/Study/ES6/2020-07-31-ES6_19_proxy/","previous":{"fields":{"slug":"/Study/ES6/2020-07-31-ES6_18_object_setprototypeof/"},"frontmatter":{"title":"ES6_Object.setPrototypeOf","category":"Study","draft":false,"tag":"ECMA Script"}},"next":{"fields":{"slug":"/Study/ES6/2020-08-17-ES6_20_generator/"},"frontmatter":{"title":"ES6_generator","category":"Study","draft":false,"tag":"ECMA Script"}}}},"staticQueryHashes":["3128451518","3665928227"]}